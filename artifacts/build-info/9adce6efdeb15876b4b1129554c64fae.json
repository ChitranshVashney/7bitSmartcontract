{"id":"9adce6efdeb15876b4b1129554c64fae","_format":"hh-sol-build-info-1","solcVersion":"0.8.8","solcLongVersion":"0.8.8+commit.dddeac2f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/AlphaVault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n\n    function withdraw(uint256 wad) external;\n}\n\ncontract AlphaVaultSwap is Ownable {\n    // AlphaVault custom events\n    event WithdrawTokens(IERC20 buyToken, uint256 boughtAmount_);\n    event EtherBalanceChange(uint256 wethBal_);\n    event BadRequest(uint256 wethBal_, uint256 reqAmount_);\n    event ZeroXCallSuccess(bool status, uint256 initialBuyTokenBalance);\n    event buyTokenBought(uint256 buTokenAmount);\n    event maxTransactionsChange(uint256 maxTransactions);\n\n    /**\n     * @dev Event to notify if transfer successful or failed\n     * after account approval verified\n     */\n    event TransferSuccessful(\n        address indexed from_,\n        address indexed to_,\n        uint256 amount_\n    );\n\n    error InvalidAddress();\n    error Invalid_Multiswap_Data();\n    error FillQuote_Swap_Failed(IERC20 buyToken,IERC20 sellToken);\n\n\n    struct wethInfo{\n        uint256 eth_balance;\n        IWETH wETH;\n    }\n    // The WETH contract.\n    IWETH public immutable WETH;\n    // IERC20 ERC20Interface;\n\n    uint256 public maxTransactions;\n    uint256 public fee;\n    // address private destination;\n\n    constructor() {\n        WETH = IWETH(0x4200000000000000000000000000000000000006);\n        maxTransactions = 25;\n        fee = 5;\n    }\n\n    /**\n     * @dev method that handles transfer of ERC20 tokens to other address\n     * it assumes the calling address has approved this contract\n     * as spender\n     * @param amount numbers of token to transfer\n     */\n    function depositToken(IERC20 sellToken, uint256 amount) private {\n        // require(amount > 0);\n        // ERC20Interface = IERC20(sellToken);\n\n        // if (amount > ERC20Interface.allowance(msg.sender, address(this))) {\n        //     emit TransferFailed(msg.sender, address(this), amount);\n        //     revert();\n        // }\n\n        // bool success = ERC20Interface.transferFrom(msg.sender, address(this), amount);\n        sellToken.transferFrom(msg.sender, address(this), amount);\n        emit TransferSuccessful(msg.sender, address(this), amount);\n    }\n\n    function setfee(uint256 num) external onlyOwner {\n        fee = num;\n    }\n\n    function setMaxTransactionLimit(uint256 num) external onlyOwner {\n        maxTransactions = num;\n        emit maxTransactionsChange(maxTransactions);\n    }\n\n    // function withdrawFee(IERC20 token, uint256 amount) external onlyOwner{\n    //     token.transfer(msg.sender, amount);\n    // }\n\n    // Transfer ETH held by this contrat to the sender/owner.\n    function withdrawETH(uint256 amount) external onlyOwner {\n        payable(msg.sender).transfer(amount);\n    }\n\n    // Payable fallback to allow this contract to receive protocol fee refunds.\n    receive() external payable {}\n\n    fallback() external payable {}\n\n    // Transfer tokens held by this contrat to the sender/owner.\n    function withdrawToken(IERC20 token, uint256 amount) internal {\n        token.transfer(msg.sender, amount);\n    }\n\n    //Sets destination address to msg.sender\n    function setDestination() internal view returns (address) {\n        // destination = msg.sender;\n        return msg.sender;\n    }\n\n    // Transfer amount of ETH held by this contrat to the sender.\n    function transferEth(uint256 amount, address msgSender) internal {\n        payable(msgSender).transfer(amount);\n    }\n\n    // Swaps ERC20->ERC20 tokens held by this contract using a 0x-API quote.\n    function fillQuote(\n        // The `buyTokenAddress` field from the API response.\n        IERC20 buyToken,\n        IERC20 sellToken,\n        // The `allowanceTarget` field from the API response.\n        address spender,\n        // The `to` field from the API response.\n        address swapTarget,\n        // The `data` field from the API response.\n        bytes calldata swapCallData\n    ) internal returns (uint256) {\n        if(spender == address(0)) revert InvalidAddress();\n        // Track our balance of the buyToken to determine how much we've bought.\n        uint256 boughtAmount = buyToken.balanceOf(address(this));\n        sellToken.approve(spender, type(uint128).max);\n        (bool success, ) = swapTarget.call{value: 0}(swapCallData);\n        emit ZeroXCallSuccess(success, boughtAmount);\n        if(!success) revert FillQuote_Swap_Failed({buyToken:buyToken,sellToken:sellToken});\n        boughtAmount = buyToken.balanceOf(address(this)) - boughtAmount;\n        emit buyTokenBought(boughtAmount);\n        return boughtAmount;\n    }\n\n    /**\n     * @param sellToken addresses of sell tokens\n     * @param buyToken addresses of sell tokens\n     * @param amount numbers of token to transfer  in unit256\n     * \n     */\n    function multiSwap(\n        IERC20[] calldata sellToken,\n        IERC20[] calldata buyToken,\n        address[] calldata spender,\n        address payable[] calldata swapTarget,\n        bytes[] calldata swapCallData,\n        uint256[] memory amount\n    ) external payable {\n        if(!(\n            sellToken.length <= maxTransactions &&\n                sellToken.length == buyToken.length &&\n                spender.length == buyToken.length &&\n                swapTarget.length == spender.length))\n            revert Invalid_Multiswap_Data();\n\n        wethInfo memory WethInfo= wethInfo(0,WETH);\n\n        if (msg.value > 0) {\n            WethInfo.wETH.deposit{value: msg.value}();\n            WethInfo.eth_balance = msg.value-fee;\n            WethInfo.wETH.transfer(owner(), fee);\n            emit EtherBalanceChange(WethInfo.eth_balance);\n        }\n\n        for (uint256 i = 0; i < spender.length; i++) {\n            // ETHER & WETH Withdrawl request.\n            if (spender[i] == address(0)) {\n                if (WethInfo.eth_balance < amount[i]) {\n                    emit BadRequest(WethInfo.eth_balance, amount[i]);\n                    break;\n                }\n                if (amount[i] > 0) {\n                    WethInfo.eth_balance -= amount[i];\n                    WethInfo.wETH.withdraw(amount[i]);\n                    transferEth(amount[i], setDestination());\n                    emit EtherBalanceChange(WethInfo.eth_balance);\n                }\n                continue;\n            }\n            // Condition For using Deposited Ether before using WETH From user balance.\n            if (sellToken[i] == WethInfo.wETH) {\n                if (sellToken[i] == buyToken[i]) {\n                    depositToken(sellToken[i], amount[i]);\n                    WethInfo.eth_balance += amount[i];\n                    emit EtherBalanceChange(WethInfo.eth_balance);\n                    continue;\n                }\n                WethInfo.eth_balance -= amount[i];\n                emit EtherBalanceChange(WethInfo.eth_balance);\n            } else {\n                depositToken(sellToken[i], amount[i]);\n            }\n\n            // Variable to store amount of tokens purchased.\n            uint256 boughtAmount = fillQuote(\n                buyToken[i],\n                sellToken[i],\n                spender[i],\n                swapTarget[i],\n                swapCallData[i]\n            );\n\n            if (buyToken[i] == WethInfo.wETH) {\n                WethInfo.eth_balance += boughtAmount;\n                emit EtherBalanceChange(WethInfo.eth_balance);\n            } else {\n                withdrawToken(buyToken[i], boughtAmount);\n                emit WithdrawTokens(buyToken[i], boughtAmount);\n            }\n        }\n        if (WethInfo.eth_balance > 0) {\n            withdrawToken(WethInfo.wETH, WethInfo.eth_balance);\n            emit EtherBalanceChange(0);\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[212],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":213,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":212,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,212],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":124,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":124,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":124,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":124,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":133,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":133,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":133,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":133,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":139,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":139,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":190,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":147,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":147,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":147,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":190,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":157,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":157,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":157,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":157,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":154,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":190,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":167,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":190,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":177,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":177,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":190,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"from","nameLocation":"2685:4:1","nodeType":"VariableDeclaration","scope":189,"src":"2677:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"to","nameLocation":"2707:2:1","nodeType":"VariableDeclaration","scope":189,"src":"2699:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"amount","nameLocation":"2727:6:1","nodeType":"VariableDeclaration","scope":189,"src":"2719:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":189,"src":"2758:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":186,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:1"},"scope":190,"src":"2646:118:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"202:2564:1","usedErrors":[]}],"src":"106:2661:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[212]},"id":213,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:2"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"111:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":212,"linearizedBaseContracts":[212],"name":"Context","nameLocation":"626:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":201,"nodeType":"Block","src":"702:34:2","statements":[{"expression":{"expression":{"id":198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":197,"id":200,"nodeType":"Return","src":"712:17:2"}]},"id":202,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:2","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"659:2:2"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"693:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:2"},"scope":212,"src":"640:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":210,"nodeType":"Block","src":"809:32:2","statements":[{"expression":{"expression":{"id":207,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":206,"id":209,"nodeType":"Return","src":"819:15:2"}]},"id":211,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:2","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"759:2:2"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"793:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":204,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:2"},"scope":212,"src":"742:99:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":213,"src":"608:235:2","usedErrors":[]}],"src":"86:758:2"},"id":2},"contracts/AlphaVault.sol":{"ast":{"absolutePath":"contracts/AlphaVault.sol","exportedSymbols":{"AlphaVaultSwap":[843],"Context":[212],"IERC20":[190],"IWETH":[227],"Ownable":[112]},"id":844,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":214,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":844,"sourceUnit":113,"src":"56:52:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":844,"sourceUnit":191,"src":"109:56:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":217,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"186:6:3"},"id":218,"nodeType":"InheritanceSpecifier","src":"186:6:3"}],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":227,"linearizedBaseContracts":[227,190],"name":"IWETH","nameLocation":"177:5:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":221,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"208:7:3","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[],"src":"215:2:3"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"234:0:3"},"scope":227,"src":"199:36:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":226,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"250:8:3","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"wad","nameLocation":"267:3:3","nodeType":"VariableDeclaration","scope":226,"src":"259:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"259:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"258:13:3"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[],"src":"280:0:3"},"scope":227,"src":"241:40:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":844,"src":"167:116:3","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":228,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"312:7:3"},"id":229,"nodeType":"InheritanceSpecifier","src":"312:7:3"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":843,"linearizedBaseContracts":[843,112,212],"name":"AlphaVaultSwap","nameLocation":"294:14:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":236,"name":"WithdrawTokens","nameLocation":"364:14:3","nodeType":"EventDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"indexed":false,"mutability":"mutable","name":"buyToken","nameLocation":"386:8:3","nodeType":"VariableDeclaration","scope":236,"src":"379:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":231,"nodeType":"UserDefinedTypeName","pathNode":{"id":230,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"379:6:3"},"referencedDeclaration":190,"src":"379:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":234,"indexed":false,"mutability":"mutable","name":"boughtAmount_","nameLocation":"404:13:3","nodeType":"VariableDeclaration","scope":236,"src":"396:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"396:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"378:40:3"},"src":"358:61:3"},{"anonymous":false,"id":240,"name":"EtherBalanceChange","nameLocation":"430:18:3","nodeType":"EventDefinition","parameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"indexed":false,"mutability":"mutable","name":"wethBal_","nameLocation":"457:8:3","nodeType":"VariableDeclaration","scope":240,"src":"449:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"449:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"448:18:3"},"src":"424:43:3"},{"anonymous":false,"id":246,"name":"BadRequest","nameLocation":"478:10:3","nodeType":"EventDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"indexed":false,"mutability":"mutable","name":"wethBal_","nameLocation":"497:8:3","nodeType":"VariableDeclaration","scope":246,"src":"489:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"489:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":244,"indexed":false,"mutability":"mutable","name":"reqAmount_","nameLocation":"515:10:3","nodeType":"VariableDeclaration","scope":246,"src":"507:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"488:38:3"},"src":"472:55:3"},{"anonymous":false,"id":252,"name":"ZeroXCallSuccess","nameLocation":"538:16:3","nodeType":"EventDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"560:6:3","nodeType":"VariableDeclaration","scope":252,"src":"555:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"555:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":250,"indexed":false,"mutability":"mutable","name":"initialBuyTokenBalance","nameLocation":"576:22:3","nodeType":"VariableDeclaration","scope":252,"src":"568:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"568:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"554:45:3"},"src":"532:68:3"},{"anonymous":false,"id":256,"name":"buyTokenBought","nameLocation":"611:14:3","nodeType":"EventDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"indexed":false,"mutability":"mutable","name":"buTokenAmount","nameLocation":"634:13:3","nodeType":"VariableDeclaration","scope":256,"src":"626:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"626:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"625:23:3"},"src":"605:44:3"},{"anonymous":false,"id":260,"name":"maxTransactionsChange","nameLocation":"660:21:3","nodeType":"EventDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"indexed":false,"mutability":"mutable","name":"maxTransactions","nameLocation":"690:15:3","nodeType":"VariableDeclaration","scope":260,"src":"682:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"681:25:3"},"src":"654:53:3"},{"anonymous":false,"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"713:111:3","text":" @dev Event to notify if transfer successful or failed\n after account approval verified"},"id":269,"name":"TransferSuccessful","nameLocation":"835:18:3","nodeType":"EventDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"indexed":true,"mutability":"mutable","name":"from_","nameLocation":"879:5:3","nodeType":"VariableDeclaration","scope":269,"src":"863:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"863:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":265,"indexed":true,"mutability":"mutable","name":"to_","nameLocation":"910:3:3","nodeType":"VariableDeclaration","scope":269,"src":"894:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"894:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":267,"indexed":false,"mutability":"mutable","name":"amount_","nameLocation":"931:7:3","nodeType":"VariableDeclaration","scope":269,"src":"923:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"853:91:3"},"src":"829:116:3"},{"id":271,"name":"InvalidAddress","nameLocation":"957:14:3","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"971:2:3"},"src":"951:23:3"},{"id":273,"name":"Invalid_Multiswap_Data","nameLocation":"985:22:3","nodeType":"ErrorDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[],"src":"1007:2:3"},"src":"979:31:3"},{"id":281,"name":"FillQuote_Swap_Failed","nameLocation":"1021:21:3","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"buyToken","nameLocation":"1050:8:3","nodeType":"VariableDeclaration","scope":281,"src":"1043:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":275,"nodeType":"UserDefinedTypeName","pathNode":{"id":274,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1043:6:3"},"referencedDeclaration":190,"src":"1043:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"sellToken","nameLocation":"1066:9:3","nodeType":"VariableDeclaration","scope":281,"src":"1059:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":278,"nodeType":"UserDefinedTypeName","pathNode":{"id":277,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1059:6:3"},"referencedDeclaration":190,"src":"1059:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1042:34:3"},"src":"1015:62:3"},{"canonicalName":"AlphaVaultSwap.wethInfo","id":287,"members":[{"constant":false,"id":283,"mutability":"mutable","name":"eth_balance","nameLocation":"1117:11:3","nodeType":"VariableDeclaration","scope":287,"src":"1109:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1109:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"wETH","nameLocation":"1144:4:3","nodeType":"VariableDeclaration","scope":287,"src":"1138:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"},"typeName":{"id":285,"nodeType":"UserDefinedTypeName","pathNode":{"id":284,"name":"IWETH","nodeType":"IdentifierPath","referencedDeclaration":227,"src":"1138:5:3"},"referencedDeclaration":227,"src":"1138:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"visibility":"internal"}],"name":"wethInfo","nameLocation":"1091:8:3","nodeType":"StructDefinition","scope":843,"src":"1084:71:3","visibility":"public"},{"constant":false,"functionSelector":"ad5c4648","id":290,"mutability":"immutable","name":"WETH","nameLocation":"1209:4:3","nodeType":"VariableDeclaration","scope":843,"src":"1186:27:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"},"typeName":{"id":289,"nodeType":"UserDefinedTypeName","pathNode":{"id":288,"name":"IWETH","nodeType":"IdentifierPath","referencedDeclaration":227,"src":"1186:5:3"},"referencedDeclaration":227,"src":"1186:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"visibility":"public"},{"constant":false,"functionSelector":"24e1c18d","id":292,"mutability":"mutable","name":"maxTransactions","nameLocation":"1265:15:3","nodeType":"VariableDeclaration","scope":843,"src":"1250:30:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ddca3f43","id":294,"mutability":"mutable","name":"fee","nameLocation":"1301:3:3","nodeType":"VariableDeclaration","scope":843,"src":"1286:18:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":311,"nodeType":"Block","src":"1361:120:3","statements":[{"expression":{"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":297,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"1371:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303036","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1384:42:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000006"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":298,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"1378:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$227_$","typeString":"type(contract IWETH)"}},"id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1378:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"src":"1371:56:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"id":302,"nodeType":"ExpressionStatement","src":"1371:56:3"},{"expression":{"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":303,"name":"maxTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1437:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3235","id":304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1455:2:3","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"1437:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":306,"nodeType":"ExpressionStatement","src":"1437:20:3"},{"expression":{"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":307,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1467:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"35","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1473:1:3","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1467:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":310,"nodeType":"ExpressionStatement","src":"1467:7:3"}]},"id":312,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[],"src":"1358:2:3"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[],"src":"1361:0:3"},"scope":843,"src":"1347:134:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":343,"nodeType":"Block","src":"1774:501:3","statements":[{"expression":{"arguments":[{"expression":{"id":324,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2166:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2166:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":328,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2186:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_AlphaVaultSwap_$843","typeString":"contract AlphaVaultSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AlphaVaultSwap_$843","typeString":"contract AlphaVaultSwap"}],"id":327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2178:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"2178:7:3","typeDescriptions":{}}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2178:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":330,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2193:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":321,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"2143:9:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":189,"src":"2143:22:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2143:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":332,"nodeType":"ExpressionStatement","src":"2143:57:3"},{"eventCall":{"arguments":[{"expression":{"id":334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2234:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2234:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":338,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2254:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_AlphaVaultSwap_$843","typeString":"contract AlphaVaultSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AlphaVaultSwap_$843","typeString":"contract AlphaVaultSwap"}],"id":337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"2246:7:3","typeDescriptions":{}}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2246:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":340,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2261:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":333,"name":"TransferSuccessful","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"2215:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2215:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":342,"nodeType":"EmitStatement","src":"2210:58:3"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"1487:218:3","text":" @dev method that handles transfer of ERC20 tokens to other address\n it assumes the calling address has approved this contract\n as spender\n @param amount numbers of token to transfer"},"id":344,"implemented":true,"kind":"function","modifiers":[],"name":"depositToken","nameLocation":"1719:12:3","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"sellToken","nameLocation":"1739:9:3","nodeType":"VariableDeclaration","scope":344,"src":"1732:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":315,"nodeType":"UserDefinedTypeName","pathNode":{"id":314,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1732:6:3"},"referencedDeclaration":190,"src":"1732:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"amount","nameLocation":"1758:6:3","nodeType":"VariableDeclaration","scope":344,"src":"1750:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1731:34:3"},"returnParameters":{"id":320,"nodeType":"ParameterList","parameters":[],"src":"1774:0:3"},"scope":843,"src":"1710:565:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":355,"nodeType":"Block","src":"2329:26:3","statements":[{"expression":{"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":351,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2339:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":352,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"2345:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2339:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":354,"nodeType":"ExpressionStatement","src":"2339:9:3"}]},"functionSelector":"73fee090","id":356,"implemented":true,"kind":"function","modifiers":[{"id":349,"kind":"modifierInvocation","modifierName":{"id":348,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2319:9:3"},"nodeType":"ModifierInvocation","src":"2319:9:3"}],"name":"setfee","nameLocation":"2290:6:3","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"num","nameLocation":"2305:3:3","nodeType":"VariableDeclaration","scope":356,"src":"2297:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2297:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2296:13:3"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[],"src":"2329:0:3"},"scope":843,"src":"2281:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":371,"nodeType":"Block","src":"2425:91:3","statements":[{"expression":{"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":363,"name":"maxTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"2435:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":364,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"2453:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2435:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":366,"nodeType":"ExpressionStatement","src":"2435:21:3"},{"eventCall":{"arguments":[{"id":368,"name":"maxTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"2493:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":367,"name":"maxTransactionsChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"2471:21:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2471:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":370,"nodeType":"EmitStatement","src":"2466:43:3"}]},"functionSelector":"7a9d7c14","id":372,"implemented":true,"kind":"function","modifiers":[{"id":361,"kind":"modifierInvocation","modifierName":{"id":360,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2415:9:3"},"nodeType":"ModifierInvocation","src":"2415:9:3"}],"name":"setMaxTransactionLimit","nameLocation":"2370:22:3","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"num","nameLocation":"2401:3:3","nodeType":"VariableDeclaration","scope":372,"src":"2393:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"2393:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2392:13:3"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"2425:0:3"},"scope":843,"src":"2361:155:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":388,"nodeType":"Block","src":"2775:53:3","statements":[{"expression":{"arguments":[{"id":385,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"2814:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":381,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2793:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2793:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2785:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":379,"name":"address","nodeType":"ElementaryTypeName","src":"2785:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2785:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"2785:28:3","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2785:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":387,"nodeType":"ExpressionStatement","src":"2785:36:3"}]},"functionSelector":"f14210a6","id":389,"implemented":true,"kind":"function","modifiers":[{"id":377,"kind":"modifierInvocation","modifierName":{"id":376,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2765:9:3"},"nodeType":"ModifierInvocation","src":"2765:9:3"}],"name":"withdrawETH","nameLocation":"2728:11:3","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"amount","nameLocation":"2748:6:3","nodeType":"VariableDeclaration","scope":389,"src":"2740:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":373,"name":"uint256","nodeType":"ElementaryTypeName","src":"2740:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2739:16:3"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2775:0:3"},"scope":843,"src":"2719:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":392,"nodeType":"Block","src":"2941:2:3","statements":[]},"id":393,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2921:2:3"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"2941:0:3"},"scope":843,"src":"2914:29:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":396,"nodeType":"Block","src":"2977:2:3","statements":[]},"id":397,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"2957:2:3"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[],"src":"2977:0:3"},"scope":843,"src":"2949:30:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":413,"nodeType":"Block","src":"3112:51:3","statements":[{"expression":{"arguments":[{"expression":{"id":408,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3137:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3137:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":410,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"3149:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":405,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3122:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":157,"src":"3122:14:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3122:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":412,"nodeType":"ExpressionStatement","src":"3122:34:3"}]},"id":414,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawToken","nameLocation":"3059:13:3","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"token","nameLocation":"3080:5:3","nodeType":"VariableDeclaration","scope":414,"src":"3073:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":399,"nodeType":"UserDefinedTypeName","pathNode":{"id":398,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"3073:6:3"},"referencedDeclaration":190,"src":"3073:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"amount","nameLocation":"3095:6:3","nodeType":"VariableDeclaration","scope":414,"src":"3087:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"3087:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3072:30:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"3112:0:3"},"scope":843,"src":"3050:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":422,"nodeType":"Block","src":"3272:71:3","statements":[{"expression":{"expression":{"id":419,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3326:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3326:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":418,"id":421,"nodeType":"Return","src":"3319:17:3"}]},"id":423,"implemented":true,"kind":"function","modifiers":[],"name":"setDestination","nameLocation":"3223:14:3","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[],"src":"3237:2:3"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":423,"src":"3263:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"3263:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3262:9:3"},"scope":843,"src":"3214:129:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":438,"nodeType":"Block","src":"3480:52:3","statements":[{"expression":{"arguments":[{"id":435,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"3518:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":432,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3498:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3490:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"3490:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3490:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"3490:27:3","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3490:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"ExpressionStatement","src":"3490:35:3"}]},"id":439,"implemented":true,"kind":"function","modifiers":[],"name":"transferEth","nameLocation":"3424:11:3","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"amount","nameLocation":"3444:6:3","nodeType":"VariableDeclaration","scope":439,"src":"3436:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"3436:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"msgSender","nameLocation":"3460:9:3","nodeType":"VariableDeclaration","scope":439,"src":"3452:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3435:35:3"},"returnParameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"3480:0:3"},"scope":843,"src":"3415:117:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":527,"nodeType":"Block","src":"4032:627:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":456,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4045:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4064:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4056:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"4056:7:3","typeDescriptions":{}}},"id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4056:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4045:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":465,"nodeType":"IfStatement","src":"4042:49:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":462,"name":"InvalidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"4075:14:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4075:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"RevertStatement","src":"4068:23:3"}},{"assignments":[467],"declarations":[{"constant":false,"id":467,"mutability":"mutable","name":"boughtAmount","nameLocation":"4190:12:3","nodeType":"VariableDeclaration","scope":527,"src":"4182:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":466,"name":"uint256","nodeType":"ElementaryTypeName","src":"4182:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":475,"initialValue":{"arguments":[{"arguments":[{"id":472,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4232:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_AlphaVaultSwap_$843","typeString":"contract AlphaVaultSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AlphaVaultSwap_$843","typeString":"contract AlphaVaultSwap"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4224:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"4224:7:3","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4224:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":468,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"4205:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"4205:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4205:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4182:56:3"},{"expression":{"arguments":[{"id":479,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4266:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4280:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":481,"name":"uint128","nodeType":"ElementaryTypeName","src":"4280:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":480,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4275:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4275:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4275:17:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":476,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"4248:9:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"4248:17:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4248:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":486,"nodeType":"ExpressionStatement","src":"4248:45:3"},{"assignments":[488,null],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"success","nameLocation":"4309:7:3","nodeType":"VariableDeclaration","scope":527,"src":"4304:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":487,"name":"bool","nodeType":"ElementaryTypeName","src":"4304:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":495,"initialValue":{"arguments":[{"id":493,"name":"swapCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4348:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":489,"name":"swapTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"4322:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4322:15:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"30","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4345:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"src":"4322:25:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4322:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4303:58:3"},{"eventCall":{"arguments":[{"id":497,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"4393:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":498,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"4402:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":496,"name":"ZeroXCallSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"4376:16:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4376:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":500,"nodeType":"EmitStatement","src":"4371:44:3"},{"condition":{"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4428:8:3","subExpression":{"id":501,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"4429:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":508,"nodeType":"IfStatement","src":"4425:82:3","trueBody":{"errorCall":{"arguments":[{"id":504,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"4477:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"id":505,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"4496:9:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":503,"name":"FillQuote_Swap_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4445:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_contract$_IERC20_$190_$_t_contract$_IERC20_$190_$returns$__$","typeString":"function (contract IERC20,contract IERC20) pure"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":["buyToken","sellToken"],"nodeType":"FunctionCall","src":"4445:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":507,"nodeType":"RevertStatement","src":"4438:69:3"}},{"expression":{"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":509,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"4517:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":514,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4559:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_AlphaVaultSwap_$843","typeString":"contract AlphaVaultSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AlphaVaultSwap_$843","typeString":"contract AlphaVaultSwap"}],"id":513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4551:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"4551:7:3","typeDescriptions":{}}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4551:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":510,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"4532:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"4532:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4532:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":517,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"4568:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4532:48:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4517:63:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":520,"nodeType":"ExpressionStatement","src":"4517:63:3"},{"eventCall":{"arguments":[{"id":522,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"4610:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":521,"name":"buyTokenBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4595:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4595:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"EmitStatement","src":"4590:33:3"},{"expression":{"id":525,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"4640:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":455,"id":526,"nodeType":"Return","src":"4633:19:3"}]},"id":528,"implemented":true,"kind":"function","modifiers":[],"name":"fillQuote","nameLocation":"3624:9:3","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"buyToken","nameLocation":"3712:8:3","nodeType":"VariableDeclaration","scope":528,"src":"3705:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":441,"nodeType":"UserDefinedTypeName","pathNode":{"id":440,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"3705:6:3"},"referencedDeclaration":190,"src":"3705:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"sellToken","nameLocation":"3737:9:3","nodeType":"VariableDeclaration","scope":528,"src":"3730:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":444,"nodeType":"UserDefinedTypeName","pathNode":{"id":443,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"3730:6:3"},"referencedDeclaration":190,"src":"3730:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"spender","nameLocation":"3826:7:3","nodeType":"VariableDeclaration","scope":528,"src":"3818:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"3818:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"swapTarget","nameLocation":"3900:10:3","nodeType":"VariableDeclaration","scope":528,"src":"3892:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"swapCallData","nameLocation":"3986:12:3","nodeType":"VariableDeclaration","scope":528,"src":"3971:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":450,"name":"bytes","nodeType":"ElementaryTypeName","src":"3971:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3633:371:3"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":528,"src":"4023:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"4023:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4022:9:3"},"scope":843,"src":"3615:1044:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":841,"nodeType":"Block","src":"5118:2619:3","statements":[{"condition":{"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5131:214:3","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":552,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"5146:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5146:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":554,"name":"maxTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"5166:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":556,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"5201:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5201:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":558,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"5221:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5221:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5146:90:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":562,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"5256:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5256:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":564,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"5274:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5274:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5256:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5146:143:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":568,"name":"swapTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"5309:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_calldata_ptr","typeString":"address payable[] calldata"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5309:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":570,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"5330:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5330:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5309:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5146:198:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5132:213:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":579,"nodeType":"IfStatement","src":"5128:262:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":576,"name":"Invalid_Multiswap_Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"5366:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5366:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"RevertStatement","src":"5359:31:3"}},{"assignments":[582],"declarations":[{"constant":false,"id":582,"mutability":"mutable","name":"WethInfo","nameLocation":"5417:8:3","nodeType":"VariableDeclaration","scope":841,"src":"5401:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo"},"typeName":{"id":581,"nodeType":"UserDefinedTypeName","pathNode":{"id":580,"name":"wethInfo","nodeType":"IdentifierPath","referencedDeclaration":287,"src":"5401:8:3"},"referencedDeclaration":287,"src":"5401:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_storage_ptr","typeString":"struct AlphaVaultSwap.wethInfo"}},"visibility":"internal"}],"id":587,"initialValue":{"arguments":[{"hexValue":"30","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5436:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":585,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"5438:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}],"id":583,"name":"wethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"5427:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_wethInfo_$287_storage_ptr_$","typeString":"type(struct AlphaVaultSwap.wethInfo storage pointer)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5427:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"5401:42:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":588,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5458:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"5458:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5470:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5458:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":627,"nodeType":"IfStatement","src":"5454:244:3","trueBody":{"id":626,"nodeType":"Block","src":"5473:225:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":592,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"5487:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":286,"src":"5487:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":221,"src":"5487:21:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":597,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5516:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"5516:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:39:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"ExpressionStatement","src":"5487:41:3"},{"expression":{"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":602,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"5542:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":604,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"5542:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":605,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5565:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"5565:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":607,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5575:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5565:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5542:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":610,"nodeType":"ExpressionStatement","src":"5542:36:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":616,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"5615:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5615:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":618,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5624:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":611,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"5592:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":286,"src":"5592:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":157,"src":"5592:22:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5592:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":620,"nodeType":"ExpressionStatement","src":"5592:36:3"},{"eventCall":{"arguments":[{"expression":{"id":622,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"5666:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"5666:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":621,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"5647:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5647:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":625,"nodeType":"EmitStatement","src":"5642:45:3"}]}},{"body":{"id":822,"nodeType":"Block","src":"5753:1824:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"5818:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":641,"indexExpression":{"id":640,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5826:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5818:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5840:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5832:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"5832:7:3","typeDescriptions":{}}},"id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5832:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5818:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":704,"nodeType":"IfStatement","src":"5814:536:3","trueBody":{"id":703,"nodeType":"Block","src":"5844:506:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":647,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"5866:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"5866:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":649,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"5889:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":651,"indexExpression":{"id":650,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5896:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5889:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5866:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":663,"nodeType":"IfStatement","src":"5862:154:3","trueBody":{"id":662,"nodeType":"Block","src":"5900:116:3","statements":[{"eventCall":{"arguments":[{"expression":{"id":654,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"5938:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"5938:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":656,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"5960:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":658,"indexExpression":{"id":657,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5967:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5960:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":653,"name":"BadRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"5927:10:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5927:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":660,"nodeType":"EmitStatement","src":"5922:48:3"},{"id":661,"nodeType":"Break","src":"5992:5:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":664,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6037:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":666,"indexExpression":{"id":665,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6044:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6037:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6049:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6037:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":701,"nodeType":"IfStatement","src":"6033:277:3","trueBody":{"id":700,"nodeType":"Block","src":"6052:258:3","statements":[{"expression":{"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":669,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6074:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"6074:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":672,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6098:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":674,"indexExpression":{"id":673,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6105:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6098:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6074:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":676,"nodeType":"ExpressionStatement","src":"6074:33:3"},{"expression":{"arguments":[{"baseExpression":{"id":682,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6152:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":684,"indexExpression":{"id":683,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6159:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6152:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":677,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6129:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":286,"src":"6129:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":226,"src":"6129:22:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6129:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":686,"nodeType":"ExpressionStatement","src":"6129:33:3"},{"expression":{"arguments":[{"baseExpression":{"id":688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6196:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":690,"indexExpression":{"id":689,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6203:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6196:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":691,"name":"setDestination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6207:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6207:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":687,"name":"transferEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"6184:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6184:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"ExpressionStatement","src":"6184:40:3"},{"eventCall":{"arguments":[{"expression":{"id":696,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6270:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"6270:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":695,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"6251:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6251:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"EmitStatement","src":"6246:45:3"}]}},{"id":702,"nodeType":"Continue","src":"6327:8:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":705,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6455:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":707,"indexExpression":{"id":706,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6465:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6455:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":708,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6471:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":286,"src":"6471:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"src":"6455:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":766,"nodeType":"Block","src":"6901:70:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":758,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6932:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":760,"indexExpression":{"id":759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6942:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6932:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"baseExpression":{"id":761,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6946:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":763,"indexExpression":{"id":762,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6953:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6946:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":757,"name":"depositToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6919:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6919:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":765,"nodeType":"ExpressionStatement","src":"6919:37:3"}]},"id":767,"nodeType":"IfStatement","src":"6451:520:3","trueBody":{"id":756,"nodeType":"Block","src":"6486:409:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":711,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6508:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":713,"indexExpression":{"id":712,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6518:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6508:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":714,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"6524:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":716,"indexExpression":{"id":715,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6533:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6524:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"src":"6508:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":742,"nodeType":"IfStatement","src":"6504:263:3","trueBody":{"id":741,"nodeType":"Block","src":"6537:230:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":719,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6572:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":721,"indexExpression":{"id":720,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6582:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6572:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"baseExpression":{"id":722,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6586:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":724,"indexExpression":{"id":723,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6593:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6586:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":718,"name":"depositToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6559:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6559:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":726,"nodeType":"ExpressionStatement","src":"6559:37:3"},{"expression":{"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":727,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6618:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"6618:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":730,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6642:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":732,"indexExpression":{"id":731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6649:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6642:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6618:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":734,"nodeType":"ExpressionStatement","src":"6618:33:3"},{"eventCall":{"arguments":[{"expression":{"id":736,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6697:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"6697:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":735,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"6678:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6678:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"EmitStatement","src":"6673:45:3"},{"id":740,"nodeType":"Continue","src":"6740:8:3"}]}},{"expression":{"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":743,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6784:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"6784:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":746,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6808:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":748,"indexExpression":{"id":747,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6815:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6808:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6784:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":750,"nodeType":"ExpressionStatement","src":"6784:33:3"},{"eventCall":{"arguments":[{"expression":{"id":752,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6859:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"6859:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":751,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"6840:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6840:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"EmitStatement","src":"6835:45:3"}]}},{"assignments":[769],"declarations":[{"constant":false,"id":769,"mutability":"mutable","name":"boughtAmount","nameLocation":"7054:12:3","nodeType":"VariableDeclaration","scope":822,"src":"7046:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"7046:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":787,"initialValue":{"arguments":[{"baseExpression":{"id":771,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"7096:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":773,"indexExpression":{"id":772,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7105:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7096:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"baseExpression":{"id":774,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"7125:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":776,"indexExpression":{"id":775,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7135:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7125:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"baseExpression":{"id":777,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"7155:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":779,"indexExpression":{"id":778,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7163:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7155:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":780,"name":"swapTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"7183:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_calldata_ptr","typeString":"address payable[] calldata"}},"id":782,"indexExpression":{"id":781,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7194:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7183:13:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"baseExpression":{"id":783,"name":"swapCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7214:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":785,"indexExpression":{"id":784,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7227:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7214:15:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":770,"name":"fillQuote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"7069:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_bytes_calldata_ptr_$returns$_t_uint256_$","typeString":"function (contract IERC20,contract IERC20,address,address,bytes calldata) returns (uint256)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7069:174:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7046:197:3"},{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":788,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"7262:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":790,"indexExpression":{"id":789,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7271:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7262:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":791,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"7277:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":286,"src":"7277:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"src":"7262:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":820,"nodeType":"Block","src":"7430:137:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":807,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"7462:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":809,"indexExpression":{"id":808,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7471:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7462:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"id":810,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7475:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":806,"name":"withdrawToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7448:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7448:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"7448:40:3"},{"eventCall":{"arguments":[{"baseExpression":{"id":814,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"7526:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":816,"indexExpression":{"id":815,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7535:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7526:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"id":817,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7539:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":813,"name":"WithdrawTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"7511:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7511:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":819,"nodeType":"EmitStatement","src":"7506:46:3"}]},"id":821,"nodeType":"IfStatement","src":"7258:309:3","trueBody":{"id":805,"nodeType":"Block","src":"7292:132:3","statements":[{"expression":{"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":794,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"7310:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"7310:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":797,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7334:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":799,"nodeType":"ExpressionStatement","src":"7310:36:3"},{"eventCall":{"arguments":[{"expression":{"id":801,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"7388:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"7388:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":800,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"7369:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7369:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"EmitStatement","src":"7364:45:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":632,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5728:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":633,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"5732:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5732:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5728:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":823,"initializationExpression":{"assignments":[629],"declarations":[{"constant":false,"id":629,"mutability":"mutable","name":"i","nameLocation":"5721:1:3","nodeType":"VariableDeclaration","scope":823,"src":"5713:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"5713:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":631,"initialValue":{"hexValue":"30","id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5725:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5713:13:3"},"loopExpression":{"expression":{"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5748:3:3","subExpression":{"id":636,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5748:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":638,"nodeType":"ExpressionStatement","src":"5748:3:3"},"nodeType":"ForStatement","src":"5708:1869:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":824,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"7590:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"7590:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7613:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7590:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":840,"nodeType":"IfStatement","src":"7586:145:3","trueBody":{"id":839,"nodeType":"Block","src":"7616:115:3","statements":[{"expression":{"arguments":[{"expression":{"id":829,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"7644:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":286,"src":"7644:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},{"expression":{"id":831,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"7659:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$287_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":283,"src":"7659:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":828,"name":"withdrawToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7630:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7630:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":834,"nodeType":"ExpressionStatement","src":"7630:50:3"},{"eventCall":{"arguments":[{"hexValue":"30","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7718:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":835,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"7699:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7699:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":838,"nodeType":"EmitStatement","src":"7694:26:3"}]}}]},"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"4665:178:3","text":" @param sellToken addresses of sell tokens\n @param buyToken addresses of sell tokens\n @param amount numbers of token to transfer  in unit256\n "},"functionSelector":"6ca591a7","id":842,"implemented":true,"kind":"function","modifiers":[],"name":"multiSwap","nameLocation":"4857:9:3","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"sellToken","nameLocation":"4894:9:3","nodeType":"VariableDeclaration","scope":842,"src":"4876:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":531,"nodeType":"UserDefinedTypeName","pathNode":{"id":530,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"4876:6:3"},"referencedDeclaration":190,"src":"4876:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":532,"nodeType":"ArrayTypeName","src":"4876:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"buyToken","nameLocation":"4931:8:3","nodeType":"VariableDeclaration","scope":842,"src":"4913:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":535,"nodeType":"UserDefinedTypeName","pathNode":{"id":534,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"4913:6:3"},"referencedDeclaration":190,"src":"4913:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":536,"nodeType":"ArrayTypeName","src":"4913:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"spender","nameLocation":"4968:7:3","nodeType":"VariableDeclaration","scope":842,"src":"4949:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"4949:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":539,"nodeType":"ArrayTypeName","src":"4949:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"swapTarget","nameLocation":"5012:10:3","nodeType":"VariableDeclaration","scope":842,"src":"4985:37:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_calldata_ptr","typeString":"address payable[]"},"typeName":{"baseType":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"4985:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":542,"nodeType":"ArrayTypeName","src":"4985:17:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"swapCallData","nameLocation":"5049:12:3","nodeType":"VariableDeclaration","scope":842,"src":"5032:29:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":544,"name":"bytes","nodeType":"ElementaryTypeName","src":"5032:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":545,"nodeType":"ArrayTypeName","src":"5032:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"amount","nameLocation":"5088:6:3","nodeType":"VariableDeclaration","scope":842,"src":"5071:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"5071:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ArrayTypeName","src":"5071:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4866:234:3"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[],"src":"5118:0:3"},"scope":843,"src":"4848:2889:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":844,"src":"285:7454:3","usedErrors":[271,273,281]}],"src":"32:7708:3"},"id":3}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AlphaVault.sol":{"AlphaVaultSwap":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"contract IERC20","name":"sellToken","type":"address"}],"name":"FillQuote_Swap_Failed","type":"error"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"Invalid_Multiswap_Data","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"wethBal_","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reqAmount_","type":"uint256"}],"name":"BadRequest","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"wethBal_","type":"uint256"}],"name":"EtherBalanceChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from_","type":"address"},{"indexed":true,"internalType":"address","name":"to_","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount_","type":"uint256"}],"name":"TransferSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract IERC20","name":"buyToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"boughtAmount_","type":"uint256"}],"name":"WithdrawTokens","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"status","type":"bool"},{"indexed":false,"internalType":"uint256","name":"initialBuyTokenBalance","type":"uint256"}],"name":"ZeroXCallSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"buTokenAmount","type":"uint256"}],"name":"buyTokenBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"maxTransactions","type":"uint256"}],"name":"maxTransactionsChange","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTransactions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"sellToken","type":"address[]"},{"internalType":"contract IERC20[]","name":"buyToken","type":"address[]"},{"internalType":"address[]","name":"spender","type":"address[]"},{"internalType":"address payable[]","name":"swapTarget","type":"address[]"},{"internalType":"bytes[]","name":"swapCallData","type":"bytes[]"},{"internalType":"uint256[]","name":"amount","type":"uint256[]"}],"name":"multiSwap","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"num","type":"uint256"}],"name":"setMaxTransactionLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"num","type":"uint256"}],"name":"setfee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"events":{"TransferSuccessful(address,address,uint256)":{"details":"Event to notify if transfer successful or failed after account approval verified"}},"kind":"dev","methods":{"multiSwap(address[],address[],address[],address[],bytes[],uint256[])":{"params":{"amount":"numbers of token to transfer  in unit256 ","buyToken":"addresses of sell tokens","sellToken":"addresses of sell tokens"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_312":{"entryPoint":null,"id":312,"parameterSlots":0,"returnSlots":0},"@_msgSender_202":{"entryPoint":141,"id":202,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":149,"id":111,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5061002d61002261008d60201b60201c565b61009560201b60201c565b73420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060196001819055506005600281905550610159565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60805160601c6120206200017f600039600081816102af0152610c0d01526120206000f3fe6080604052600436106100955760003560e01c80638da5cb5b116100595780638da5cb5b1461014e578063ad5c464814610179578063ddca3f43146101a4578063f14210a6146101cf578063f2fde38b146101f85761009c565b806324e1c18d1461009e5780636ca591a7146100c9578063715018a6146100e557806373fee090146100fc5780637a9d7c14146101255761009c565b3661009c57005b005b3480156100aa57600080fd5b506100b3610221565b6040516100c091906113a9565b60405180910390f35b6100e360048036038101906100de91906116ba565b610227565b005b3480156100f157600080fd5b506100fa610b71565b005b34801561010857600080fd5b50610123600480360381019061011e9190611807565b610b85565b005b34801561013157600080fd5b5061014c60048036038101906101479190611807565b610b97565b005b34801561015a57600080fd5b50610163610be2565b6040516101709190611875565b60405180910390f35b34801561018557600080fd5b5061018e610c0b565b60405161019b91906118ef565b60405180910390f35b3480156101b057600080fd5b506101b9610c2f565b6040516101c691906113a9565b60405180910390f35b3480156101db57600080fd5b506101f660048036038101906101f19190611807565b610c35565b005b34801561020457600080fd5b5061021f600480360381019061021a9190611936565b610c87565b005b60015481565b6001548b8b9050111580156102415750888890508b8b9050145b801561025257508888905087879050145b801561026357508686905085859050145b610299576040517f90b42d6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060400160405280600081526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152509050600034111561044557806020015173ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561033e57600080fd5b505af1158015610352573d6000803e3d6000fd5b5050505050600254346103659190611992565b816000018181525050806020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610396610be2565b6002546040518363ffffffff1660e01b81526004016103b69291906119c6565b602060405180830381600087803b1580156103d057600080fd5b505af11580156103e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104089190611a27565b507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed16816000015160405161043c91906113a9565b60405180910390a15b60005b88889050811015610b0a57600073ffffffffffffffffffffffffffffffffffffffff1689898381811061047e5761047d611a54565b5b90506020020160208101906104939190611936565b73ffffffffffffffffffffffffffffffffffffffff16141561067c578281815181106104c2576104c1611a54565b5b602002602001015182600001511015610531577f0b74b0798ec89f7cf91b1446e01c1bb75b7d55c45b104edfb364a46a074e2f56826000015184838151811061050e5761050d611a54565b5b6020026020010151604051610524929190611a83565b60405180910390a1610b0a565b600083828151811061054657610545611a54565b5b602002602001015111156106775782818151811061056757610566611a54565b5b6020026020010151826000018181516105809190611992565b91508181525050816020015173ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d8483815181106105ba576105b9611a54565b5b60200260200101516040518263ffffffff1660e01b81526004016105de91906113a9565b600060405180830381600087803b1580156105f857600080fd5b505af115801561060c573d6000803e3d6000fd5b5050505061063b83828151811061062657610625611a54565b5b6020026020010151610636610d0b565b610d13565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed16826000015160405161066e91906113a9565b60405180910390a15b610af7565b816020015173ffffffffffffffffffffffffffffffffffffffff168d8d838181106106aa576106a9611a54565b5b90506020020160208101906106bf9190611aea565b73ffffffffffffffffffffffffffffffffffffffff16141561088e578a8a828181106106ee576106ed611a54565b5b90506020020160208101906107039190611aea565b73ffffffffffffffffffffffffffffffffffffffff168d8d8381811061072c5761072b611a54565b5b90506020020160208101906107419190611aea565b73ffffffffffffffffffffffffffffffffffffffff16141561081b576107a88d8d8381811061077357610772611a54565b5b90506020020160208101906107889190611aea565b84838151811061079b5761079a611a54565b5b6020026020010151610d5e565b8281815181106107bb576107ba611a54565b5b6020026020010151826000018181516107d49190611b17565b915081815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed16826000015160405161080e91906113a9565b60405180910390a1610af7565b82818151811061082e5761082d611a54565b5b6020026020010151826000018181516108479190611992565b915081815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed16826000015160405161088191906113a9565b60405180910390a16108da565b6108d98d8d838181106108a4576108a3611a54565b5b90506020020160208101906108b99190611aea565b8483815181106108cc576108cb611a54565b5b6020026020010151610d5e565b5b60006109a98c8c848181106108f2576108f1611a54565b5b90506020020160208101906109079190611aea565b8f8f8581811061091a57610919611a54565b5b905060200201602081019061092f9190611aea565b8c8c8681811061094257610941611a54565b5b90506020020160208101906109579190611936565b8b8b8781811061096a57610969611a54565b5b905060200201602081019061097f9190611bab565b8a8a8881811061099257610991611a54565b5b90506020028101906109a49190611be7565b610e57565b9050826020015173ffffffffffffffffffffffffffffffffffffffff168c8c848181106109d9576109d8611a54565b5b90506020020160208101906109ee9190611aea565b73ffffffffffffffffffffffffffffffffffffffff161415610a63578083600001818151610a1c9190611b17565b915081815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed168360000151604051610a5691906113a9565b60405180910390a1610af5565b610a948c8c84818110610a7957610a78611a54565b5b9050602002016020810190610a8e9190611aea565b826111b4565b7f680f2e4f4032ebf1774e8cdbaddcb1b617a5a606411c8ca96257ada338d3833c8c8c84818110610ac857610ac7611a54565b5b9050602002016020810190610add9190611aea565b82604051610aec929190611c6b565b60405180910390a15b505b8080610b0290611c94565b915050610448565b50600081600001511115610b6357610b2a816020015182600001516111b4565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed166000604051610b5a9190611d18565b60405180910390a15b505050505050505050505050565b610b79611246565b610b8360006112c4565b565b610b8d611246565b8060028190555050565b610b9f611246565b806001819055507f5091ccfe22ca8f99d8f1f07c6ae3a61daf990d74ef229d46898624ff3977238c600154604051610bd791906113a9565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b610c3d611246565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c83573d6000803e3d6000fd5b5050565b610c8f611246565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf690611db6565b60405180910390fd5b610d08816112c4565b50565b600033905090565b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610d59573d6000803e3d6000fd5b505050565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610d9b93929190611dd6565b602060405180830381600087803b158015610db557600080fd5b505af1158015610dc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ded9190611a27565b503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd6d3eb25a413c05d8107fc49deb2789bef7f612582b2482804c0b0423b6638ee83604051610e4b91906113a9565b60405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610ebf576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008773ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610efa9190611875565b60206040518083038186803b158015610f1257600080fd5b505afa158015610f26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4a9190611e22565b90508673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3876fffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610f97929190611e9c565b602060405180830381600087803b158015610fb157600080fd5b505af1158015610fc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe99190611a27565b5060008573ffffffffffffffffffffffffffffffffffffffff1660008686604051611015929190611f04565b60006040518083038185875af1925050503d8060008114611052576040519150601f19603f3d011682016040523d82523d6000602084013e611057565b606091505b505090507fb1bbdf0cbdd013d8d322184c42c16dafe4b2b3b66c3d60f46874b6c78b9a87f6818360405161108c929190611f2c565b60405180910390a1806110d85788886040517f7155081c0000000000000000000000000000000000000000000000000000000081526004016110cf929190611f55565b60405180910390fd5b818973ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111129190611875565b60206040518083038186803b15801561112a57600080fd5b505afa15801561113e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111629190611e22565b61116c9190611992565b91507f74496fce2cdc392d99808924e4161c005195a64fee4c166b02c2b716db28abb08260405161119d91906113a9565b60405180910390a181925050509695505050505050565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016111ef9291906119c6565b602060405180830381600087803b15801561120957600080fd5b505af115801561121d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112419190611a27565b505050565b61124e611388565b73ffffffffffffffffffffffffffffffffffffffff1661126c610be2565b73ffffffffffffffffffffffffffffffffffffffff16146112c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b990611fca565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b6113a381611390565b82525050565b60006020820190506113be600083018461139a565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126113fd576113fc6113d8565b5b8235905067ffffffffffffffff81111561141a576114196113dd565b5b602083019150836020820283011115611436576114356113e2565b5b9250929050565b60008083601f840112611453576114526113d8565b5b8235905067ffffffffffffffff8111156114705761146f6113dd565b5b60208301915083602082028301111561148c5761148b6113e2565b5b9250929050565b60008083601f8401126114a9576114a86113d8565b5b8235905067ffffffffffffffff8111156114c6576114c56113dd565b5b6020830191508360208202830111156114e2576114e16113e2565b5b9250929050565b60008083601f8401126114ff576114fe6113d8565b5b8235905067ffffffffffffffff81111561151c5761151b6113dd565b5b602083019150836020820283011115611538576115376113e2565b5b9250929050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115888261153f565b810181811067ffffffffffffffff821117156115a7576115a6611550565b5b80604052505050565b60006115ba6113c4565b90506115c6828261157f565b919050565b600067ffffffffffffffff8211156115e6576115e5611550565b5b602082029050602081019050919050565b61160081611390565b811461160b57600080fd5b50565b60008135905061161d816115f7565b92915050565b6000611636611631846115cb565b6115b0565b90508083825260208201905060208402830185811115611659576116586113e2565b5b835b81811015611682578061166e888261160e565b84526020840193505060208101905061165b565b5050509392505050565b600082601f8301126116a1576116a06113d8565b5b81356116b1848260208601611623565b91505092915050565b600080600080600080600080600080600060c08c8e0312156116df576116de6113ce565b5b60008c013567ffffffffffffffff8111156116fd576116fc6113d3565b5b6117098e828f016113e7565b9b509b505060208c013567ffffffffffffffff81111561172c5761172b6113d3565b5b6117388e828f016113e7565b995099505060408c013567ffffffffffffffff81111561175b5761175a6113d3565b5b6117678e828f0161143d565b975097505060608c013567ffffffffffffffff81111561178a576117896113d3565b5b6117968e828f01611493565b955095505060808c013567ffffffffffffffff8111156117b9576117b86113d3565b5b6117c58e828f016114e9565b935093505060a08c013567ffffffffffffffff8111156117e8576117e76113d3565b5b6117f48e828f0161168c565b9150509295989b509295989b9093969950565b60006020828403121561181d5761181c6113ce565b5b600061182b8482850161160e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061185f82611834565b9050919050565b61186f81611854565b82525050565b600060208201905061188a6000830184611866565b92915050565b6000819050919050565b60006118b56118b06118ab84611834565b611890565b611834565b9050919050565b60006118c78261189a565b9050919050565b60006118d9826118bc565b9050919050565b6118e9816118ce565b82525050565b600060208201905061190460008301846118e0565b92915050565b61191381611854565b811461191e57600080fd5b50565b6000813590506119308161190a565b92915050565b60006020828403121561194c5761194b6113ce565b5b600061195a84828501611921565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061199d82611390565b91506119a883611390565b9250828210156119bb576119ba611963565b5b828203905092915050565b60006040820190506119db6000830185611866565b6119e8602083018461139a565b9392505050565b60008115159050919050565b611a04816119ef565b8114611a0f57600080fd5b50565b600081519050611a21816119fb565b92915050565b600060208284031215611a3d57611a3c6113ce565b5b6000611a4b84828501611a12565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000604082019050611a98600083018561139a565b611aa5602083018461139a565b9392505050565b6000611ab782611854565b9050919050565b611ac781611aac565b8114611ad257600080fd5b50565b600081359050611ae481611abe565b92915050565b600060208284031215611b0057611aff6113ce565b5b6000611b0e84828501611ad5565b91505092915050565b6000611b2282611390565b9150611b2d83611390565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b6257611b61611963565b5b828201905092915050565b6000611b7882611834565b9050919050565b611b8881611b6d565b8114611b9357600080fd5b50565b600081359050611ba581611b7f565b92915050565b600060208284031215611bc157611bc06113ce565b5b6000611bcf84828501611b96565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611c0457611c03611bd8565b5b80840192508235915067ffffffffffffffff821115611c2657611c25611bdd565b5b602083019250600182023603831315611c4257611c41611be2565b5b509250929050565b6000611c55826118bc565b9050919050565b611c6581611c4a565b82525050565b6000604082019050611c806000830185611c5c565b611c8d602083018461139a565b9392505050565b6000611c9f82611390565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cd257611cd1611963565b5b600182019050919050565b6000819050919050565b6000611d02611cfd611cf884611cdd565b611890565b611390565b9050919050565b611d1281611ce7565b82525050565b6000602082019050611d2d6000830184611d09565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611da0602683611d33565b9150611dab82611d44565b604082019050919050565b60006020820190508181036000830152611dcf81611d93565b9050919050565b6000606082019050611deb6000830186611866565b611df86020830185611866565b611e05604083018461139a565b949350505050565b600081519050611e1c816115f7565b92915050565b600060208284031215611e3857611e376113ce565b5b6000611e4684828501611e0d565b91505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6000611e86611e81611e7c84611e4f565b611890565b611390565b9050919050565b611e9681611e6b565b82525050565b6000604082019050611eb16000830185611866565b611ebe6020830184611e8d565b9392505050565b600081905092915050565b82818337600083830152505050565b6000611eeb8385611ec5565b9350611ef8838584611ed0565b82840190509392505050565b6000611f11828486611edf565b91508190509392505050565b611f26816119ef565b82525050565b6000604082019050611f416000830185611f1d565b611f4e602083018461139a565b9392505050565b6000604082019050611f6a6000830185611c5c565b611f776020830184611c5c565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611fb4602083611d33565b9150611fbf82611f7e565b602082019050919050565b60006020820190508181036000830152611fe381611fa7565b905091905056fea264697066735822122077fde97a854eb9ed26fa80cc8af77468a8f1f33cd2ec7df49d0d443d621a469064736f6c63430008080033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x8D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x95 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH1 0x19 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x2020 PUSH3 0x17F PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2AF ADD MSTORE PUSH2 0xC0D ADD MSTORE PUSH2 0x2020 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F8 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x24E1C18D EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x6CA591A7 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x73FEE090 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x7A9D7C14 EQ PUSH2 0x125 JUMPI PUSH2 0x9C JUMP JUMPDEST CALLDATASIZE PUSH2 0x9C JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0xB85 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0xB97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0xC87 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP12 DUP12 SWAP1 POP GT ISZERO DUP1 ISZERO PUSH2 0x241 JUMPI POP DUP9 DUP9 SWAP1 POP DUP12 DUP12 SWAP1 POP EQ JUMPDEST DUP1 ISZERO PUSH2 0x252 JUMPI POP DUP9 DUP9 SWAP1 POP DUP8 DUP8 SWAP1 POP EQ JUMPDEST DUP1 ISZERO PUSH2 0x263 JUMPI POP DUP7 DUP7 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ JUMPDEST PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B42D6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x352 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x2 SLOAD CALLVALUE PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x1992 JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x396 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP3 SWAP2 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x0 JUMPDEST DUP9 DUP9 SWAP1 POP DUP2 LT ISZERO PUSH2 0xB0A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x67C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4C2 JUMPI PUSH2 0x4C1 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x531 JUMPI PUSH32 0xB74B0798EC89F7CF91B1446E01C1BB75B7D55C45B104EDFB364A46A074E2F56 DUP3 PUSH1 0x0 ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x50E JUMPI PUSH2 0x50D PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x524 SWAP3 SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x546 JUMPI PUSH2 0x545 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x677 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x1992 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5BA JUMPI PUSH2 0x5B9 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x63B DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x626 JUMPI PUSH2 0x625 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x636 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x6AA JUMPI PUSH2 0x6A9 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x88E JUMPI DUP11 DUP11 DUP3 DUP2 DUP2 LT PUSH2 0x6EE JUMPI PUSH2 0x6ED PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x72C JUMPI PUSH2 0x72B PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x81B JUMPI PUSH2 0x7A8 DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x773 JUMPI PUSH2 0x772 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x788 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x79B JUMPI PUSH2 0x79A PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xD5E JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7BB JUMPI PUSH2 0x7BA PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xAF7 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x82E JUMPI PUSH2 0x82D PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x847 SWAP2 SWAP1 PUSH2 0x1992 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x881 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x8DA JUMP JUMPDEST PUSH2 0x8D9 DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x8A4 JUMPI PUSH2 0x8A3 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8B9 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8CC JUMPI PUSH2 0x8CB PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xD5E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A9 DUP13 DUP13 DUP5 DUP2 DUP2 LT PUSH2 0x8F2 JUMPI PUSH2 0x8F1 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST DUP16 DUP16 DUP6 DUP2 DUP2 LT PUSH2 0x91A JUMPI PUSH2 0x919 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST DUP13 DUP13 DUP7 DUP2 DUP2 LT PUSH2 0x942 JUMPI PUSH2 0x941 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST DUP12 DUP12 DUP8 DUP2 DUP2 LT PUSH2 0x96A JUMPI PUSH2 0x969 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST DUP11 DUP11 DUP9 DUP2 DUP2 LT PUSH2 0x992 JUMPI PUSH2 0x991 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0xE57 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 DUP13 DUP5 DUP2 DUP2 LT PUSH2 0x9D9 JUMPI PUSH2 0x9D8 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA63 JUMPI DUP1 DUP4 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0xA94 DUP13 DUP13 DUP5 DUP2 DUP2 LT PUSH2 0xA79 JUMPI PUSH2 0xA78 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA8E SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST DUP3 PUSH2 0x11B4 JUMP JUMPDEST PUSH32 0x680F2E4F4032EBF1774E8CDBADDCB1B617A5A606411C8CA96257ADA338D3833C DUP13 DUP13 DUP5 DUP2 DUP2 LT PUSH2 0xAC8 JUMPI PUSH2 0xAC7 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0xAEC SWAP3 SWAP2 SWAP1 PUSH2 0x1C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0xB02 SWAP1 PUSH2 0x1C94 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x448 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0xB63 JUMPI PUSH2 0xB2A DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x11B4 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xB5A SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB79 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0xB83 PUSH1 0x0 PUSH2 0x12C4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB8D PUSH2 0x1246 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xB9F PUSH2 0x1246 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x5091CCFE22CA8F99D8F1F07C6AE3A61DAF990D74EF229D46898624FF3977238C PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC3D PUSH2 0x1246 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC8F PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF6 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD08 DUP2 PUSH2 0x12C4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDED SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD6D3EB25A413C05D8107FC49DEB2789BEF7F612582B2482804C0B0423B6638EE DUP4 PUSH1 0x40 MLOAD PUSH2 0xE4B SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFA SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF4A SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF97 SWAP3 SWAP2 SWAP1 PUSH2 0x1E9C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFE9 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1015 SWAP3 SWAP2 SWAP1 PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH32 0xB1BBDF0CBDD013D8D322184C42C16DAFE4B2B3B66C3D60F46874B6C78B9A87F6 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x108C SWAP3 SWAP2 SWAP1 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH2 0x10D8 JUMPI DUP9 DUP9 PUSH1 0x40 MLOAD PUSH32 0x7155081C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CF SWAP3 SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1112 SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x113E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1162 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0x116C SWAP2 SWAP1 PUSH2 0x1992 JUMP JUMPDEST SWAP2 POP PUSH32 0x74496FCE2CDC392D99808924E4161C005195A64FEE4C166B02C2B716DB28ABB0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x119D SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP3 POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EF SWAP3 SWAP2 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x121D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1241 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x124E PUSH2 0x1388 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x126C PUSH2 0xBE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B9 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A3 DUP2 PUSH2 0x1390 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x13FD JUMPI PUSH2 0x13FC PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x13DD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1436 JUMPI PUSH2 0x1435 PUSH2 0x13E2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1453 JUMPI PUSH2 0x1452 PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1470 JUMPI PUSH2 0x146F PUSH2 0x13DD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x148C JUMPI PUSH2 0x148B PUSH2 0x13E2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14A9 JUMPI PUSH2 0x14A8 PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14C6 JUMPI PUSH2 0x14C5 PUSH2 0x13DD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x13E2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14FF JUMPI PUSH2 0x14FE PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x151C JUMPI PUSH2 0x151B PUSH2 0x13DD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1538 JUMPI PUSH2 0x1537 PUSH2 0x13E2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1588 DUP3 PUSH2 0x153F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x1550 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BA PUSH2 0x13C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x15C6 DUP3 DUP3 PUSH2 0x157F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x1550 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1600 DUP2 PUSH2 0x1390 JUMP JUMPDEST DUP2 EQ PUSH2 0x160B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x161D DUP2 PUSH2 0x15F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1636 PUSH2 0x1631 DUP5 PUSH2 0x15CB JUMP JUMPDEST PUSH2 0x15B0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1659 JUMPI PUSH2 0x1658 PUSH2 0x13E2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1682 JUMPI DUP1 PUSH2 0x166E DUP9 DUP3 PUSH2 0x160E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x165B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16A1 JUMPI PUSH2 0x16A0 PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16B1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1623 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x16DF JUMPI PUSH2 0x16DE PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16FD JUMPI PUSH2 0x16FC PUSH2 0x13D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1709 DUP15 DUP3 DUP16 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP12 POP SWAP12 POP POP PUSH1 0x20 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x172C JUMPI PUSH2 0x172B PUSH2 0x13D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1738 DUP15 DUP3 DUP16 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP10 POP SWAP10 POP POP PUSH1 0x40 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x13D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1767 DUP15 DUP3 DUP16 ADD PUSH2 0x143D JUMP JUMPDEST SWAP8 POP SWAP8 POP POP PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x178A JUMPI PUSH2 0x1789 PUSH2 0x13D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1796 DUP15 DUP3 DUP16 ADD PUSH2 0x1493 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x80 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17B9 JUMPI PUSH2 0x17B8 PUSH2 0x13D3 JUMP JUMPDEST JUMPDEST PUSH2 0x17C5 DUP15 DUP3 DUP16 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E8 JUMPI PUSH2 0x17E7 PUSH2 0x13D3 JUMP JUMPDEST JUMPDEST PUSH2 0x17F4 DUP15 DUP3 DUP16 ADD PUSH2 0x168C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181D JUMPI PUSH2 0x181C PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182B DUP5 DUP3 DUP6 ADD PUSH2 0x160E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x185F DUP3 PUSH2 0x1834 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186F DUP2 PUSH2 0x1854 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x188A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B5 PUSH2 0x18B0 PUSH2 0x18AB DUP5 PUSH2 0x1834 JUMP JUMPDEST PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1834 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C7 DUP3 PUSH2 0x189A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D9 DUP3 PUSH2 0x18BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E9 DUP2 PUSH2 0x18CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1904 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1913 DUP2 PUSH2 0x1854 JUMP JUMPDEST DUP2 EQ PUSH2 0x191E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1930 DUP2 PUSH2 0x190A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194C JUMPI PUSH2 0x194B PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x195A DUP5 DUP3 DUP6 ADD PUSH2 0x1921 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x199D DUP3 PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A8 DUP4 PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x19BB JUMPI PUSH2 0x19BA PUSH2 0x1963 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19DB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x19E8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A04 DUP2 PUSH2 0x19EF JUMP JUMPDEST DUP2 EQ PUSH2 0x1A0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A21 DUP2 PUSH2 0x19FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3D JUMPI PUSH2 0x1A3C PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4B DUP5 DUP3 DUP6 ADD PUSH2 0x1A12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A98 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x1AA5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB7 DUP3 PUSH2 0x1854 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AC7 DUP2 PUSH2 0x1AAC JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE4 DUP2 PUSH2 0x1ABE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B00 JUMPI PUSH2 0x1AFF PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B0E DUP5 DUP3 DUP6 ADD PUSH2 0x1AD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B22 DUP3 PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2D DUP4 PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1B62 JUMPI PUSH2 0x1B61 PUSH2 0x1963 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B78 DUP3 PUSH2 0x1834 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B88 DUP2 PUSH2 0x1B6D JUMP JUMPDEST DUP2 EQ PUSH2 0x1B93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BA5 DUP2 PUSH2 0x1B7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC1 JUMPI PUSH2 0x1BC0 PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BCF DUP5 DUP3 DUP6 ADD PUSH2 0x1B96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1C04 JUMPI PUSH2 0x1C03 PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C26 JUMPI PUSH2 0x1C25 PUSH2 0x1BDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1C42 JUMPI PUSH2 0x1C41 PUSH2 0x1BE2 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C55 DUP3 PUSH2 0x18BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C65 DUP2 PUSH2 0x1C4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C80 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C5C JUMP JUMPDEST PUSH2 0x1C8D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C9F DUP3 PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1CD2 JUMPI PUSH2 0x1CD1 PUSH2 0x1963 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D02 PUSH2 0x1CFD PUSH2 0x1CF8 DUP5 PUSH2 0x1CDD JUMP JUMPDEST PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D12 DUP2 PUSH2 0x1CE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D2D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA0 PUSH1 0x26 DUP4 PUSH2 0x1D33 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAB DUP3 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DCF DUP2 PUSH2 0x1D93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DEB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x1DF8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x1E05 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E1C DUP2 PUSH2 0x15F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E38 JUMPI PUSH2 0x1E37 PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E46 DUP5 DUP3 DUP6 ADD PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E86 PUSH2 0x1E81 PUSH2 0x1E7C DUP5 PUSH2 0x1E4F JUMP JUMPDEST PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E96 DUP2 PUSH2 0x1E6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EB1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x1EBE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E8D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EEB DUP4 DUP6 PUSH2 0x1EC5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EF8 DUP4 DUP6 DUP5 PUSH2 0x1ED0 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F11 DUP3 DUP5 DUP7 PUSH2 0x1EDF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1F26 DUP2 PUSH2 0x19EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F41 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x1F4E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F6A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C5C JUMP JUMPDEST PUSH2 0x1F77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C5C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB4 PUSH1 0x20 DUP4 PUSH2 0x1D33 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBF DUP3 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FE3 DUP2 PUSH2 0x1FA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xFDE97A854EB9ED26FA80CC8AF77468A8F1F33CD2EC7DF49D 0xD DIFFICULTY RETURNDATASIZE PUSH3 0x1A4690 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"285:7454:3:-:0;;;1347:134;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1384:42:3;1371:56;;;;;;;;;;;;1455:2;1437:15;:20;;;;1473:1;1467:3;:7;;;;285:7454;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;285:7454:3:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@WETH_290":{"entryPoint":3083,"id":290,"parameterSlots":0,"returnSlots":0},"@_393":{"entryPoint":null,"id":393,"parameterSlots":0,"returnSlots":0},"@_397":{"entryPoint":null,"id":397,"parameterSlots":0,"returnSlots":0},"@_checkOwner_54":{"entryPoint":4678,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_202":{"entryPoint":5000,"id":202,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":4804,"id":111,"parameterSlots":1,"returnSlots":0},"@depositToken_344":{"entryPoint":3422,"id":344,"parameterSlots":2,"returnSlots":0},"@fee_294":{"entryPoint":3119,"id":294,"parameterSlots":0,"returnSlots":0},"@fillQuote_528":{"entryPoint":3671,"id":528,"parameterSlots":6,"returnSlots":1},"@maxTransactions_292":{"entryPoint":545,"id":292,"parameterSlots":0,"returnSlots":0},"@multiSwap_842":{"entryPoint":551,"id":842,"parameterSlots":11,"returnSlots":0},"@owner_40":{"entryPoint":3042,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":2929,"id":68,"parameterSlots":0,"returnSlots":0},"@setDestination_423":{"entryPoint":3339,"id":423,"parameterSlots":0,"returnSlots":1},"@setMaxTransactionLimit_372":{"entryPoint":2967,"id":372,"parameterSlots":1,"returnSlots":0},"@setfee_356":{"entryPoint":2949,"id":356,"parameterSlots":1,"returnSlots":0},"@transferEth_439":{"entryPoint":3347,"id":439,"parameterSlots":2,"returnSlots":0},"@transferOwnership_91":{"entryPoint":3207,"id":91,"parameterSlots":1,"returnSlots":0},"@withdrawETH_389":{"entryPoint":3125,"id":389,"parameterSlots":1,"returnSlots":0},"@withdrawToken_414":{"entryPoint":4532,"id":414,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5667,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6433,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":7062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":5181,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr":{"entryPoint":5267,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":5353,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr":{"entryPoint":5095,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5772,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6674,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$190":{"entryPoint":6869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5646,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":7693,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":7083,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_payable_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5818,"id":null,"parameterSlots":2,"returnSlots":11},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6695,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$190":{"entryPoint":6890,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6151,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":7714,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6246,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7965,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7903,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack":{"entryPoint":7260,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IWETH_$227_to_t_address_fromStack":{"entryPoint":6368,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":7433,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":7571,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":8103,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint128_to_t_uint256_fromStack":{"entryPoint":7821,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5018,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7940,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6261,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":7638,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7836,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6598,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed":{"entryPoint":7980,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$190_t_contract$_IERC20_$190__to_t_address_t_address__fromStack_reversed":{"entryPoint":8021,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$190_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7275,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IWETH_$227__to_t_address__fromStack_reversed":{"entryPoint":6383,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed":{"entryPoint":7448,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7606,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8138,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6787,"id":null,"parameterSlots":3,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":7143,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":5552,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5060,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5579,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7877,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7475,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6935,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6546,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6228,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":7021,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6639,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$190":{"entryPoint":6828,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":7389,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint128":{"entryPoint":7759,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6196,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5008,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$190_to_t_address":{"entryPoint":7242,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IWETH_$227_to_t_address":{"entryPoint":6350,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":7399,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint128_to_t_uint256":{"entryPoint":7787,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":6332,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":6298,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":7888,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":5503,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":6288,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":7316,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6499,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6740,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5456,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5085,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5080,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":7133,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":7128,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5090,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":7138,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5075,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5070,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5439,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":7492,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":8062,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6410,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":7039,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6651,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$190":{"entryPoint":6846,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5623,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23119:4","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:4","statements":[{"nodeType":"YulAssignment","src":"62:16:4","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:4"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:4","type":""}],"src":"7:77:4"},{"body":{"nodeType":"YulBlock","src":"155:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:4"},"nodeType":"YulFunctionCall","src":"177:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:4"},"nodeType":"YulFunctionCall","src":"165:37:4"},"nodeType":"YulExpressionStatement","src":"165:37:4"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:4","type":""}],"src":"90:118:4"},{"body":{"nodeType":"YulBlock","src":"312:124:4","statements":[{"nodeType":"YulAssignment","src":"322:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:4"},"nodeType":"YulFunctionCall","src":"330:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:4"},"nodeType":"YulFunctionCall","src":"411:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:4"},"nodeType":"YulFunctionCall","src":"358:71:4"},"nodeType":"YulExpressionStatement","src":"358:71:4"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:4","type":""}],"src":"214:222:4"},{"body":{"nodeType":"YulBlock","src":"482:35:4","statements":[{"nodeType":"YulAssignment","src":"492:19:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:4","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:4"},"nodeType":"YulFunctionCall","src":"502:9:4"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:4"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:4","type":""}],"src":"442:75:4"},{"body":{"nodeType":"YulBlock","src":"612:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:4"},"nodeType":"YulFunctionCall","src":"622:12:4"},"nodeType":"YulExpressionStatement","src":"622:12:4"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:4"},{"body":{"nodeType":"YulBlock","src":"735:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:4"},"nodeType":"YulFunctionCall","src":"745:12:4"},"nodeType":"YulExpressionStatement","src":"745:12:4"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:4"},{"body":{"nodeType":"YulBlock","src":"858:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"875:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"878:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"868:6:4"},"nodeType":"YulFunctionCall","src":"868:12:4"},"nodeType":"YulExpressionStatement","src":"868:12:4"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"769:117:4"},{"body":{"nodeType":"YulBlock","src":"981:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"998:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1001:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"991:6:4"},"nodeType":"YulFunctionCall","src":"991:12:4"},"nodeType":"YulExpressionStatement","src":"991:12:4"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"892:117:4"},{"body":{"nodeType":"YulBlock","src":"1104:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1121:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1124:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1114:6:4"},"nodeType":"YulFunctionCall","src":"1114:12:4"},"nodeType":"YulExpressionStatement","src":"1114:12:4"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1015:117:4"},{"body":{"nodeType":"YulBlock","src":"1267:478:4","statements":[{"body":{"nodeType":"YulBlock","src":"1316:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1318:77:4"},"nodeType":"YulFunctionCall","src":"1318:79:4"},"nodeType":"YulExpressionStatement","src":"1318:79:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1295:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"1303:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1291:3:4"},"nodeType":"YulFunctionCall","src":"1291:17:4"},{"name":"end","nodeType":"YulIdentifier","src":"1310:3:4"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1287:3:4"},"nodeType":"YulFunctionCall","src":"1287:27:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1280:6:4"},"nodeType":"YulFunctionCall","src":"1280:35:4"},"nodeType":"YulIf","src":"1277:122:4"},{"nodeType":"YulAssignment","src":"1408:30:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1431:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1418:12:4"},"nodeType":"YulFunctionCall","src":"1418:20:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1408:6:4"}]},{"body":{"nodeType":"YulBlock","src":"1481:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1483:77:4"},"nodeType":"YulFunctionCall","src":"1483:79:4"},"nodeType":"YulExpressionStatement","src":"1483:79:4"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1453:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"1461:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1450:2:4"},"nodeType":"YulFunctionCall","src":"1450:30:4"},"nodeType":"YulIf","src":"1447:117:4"},{"nodeType":"YulAssignment","src":"1573:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1589:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1585:3:4"},"nodeType":"YulFunctionCall","src":"1585:17:4"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1573:8:4"}]},{"body":{"nodeType":"YulBlock","src":"1656:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1658:77:4"},"nodeType":"YulFunctionCall","src":"1658:79:4"},"nodeType":"YulExpressionStatement","src":"1658:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1621:8:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1635:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"1643:4:4","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1631:3:4"},"nodeType":"YulFunctionCall","src":"1631:17:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1617:3:4"},"nodeType":"YulFunctionCall","src":"1617:32:4"},{"name":"end","nodeType":"YulIdentifier","src":"1651:3:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1614:2:4"},"nodeType":"YulFunctionCall","src":"1614:41:4"},"nodeType":"YulIf","src":"1611:128:4"}]},"name":"abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1234:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"1242:3:4","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1250:8:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"1260:6:4","type":""}],"src":"1163:582:4"},{"body":{"nodeType":"YulBlock","src":"1858:478:4","statements":[{"body":{"nodeType":"YulBlock","src":"1907:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1909:77:4"},"nodeType":"YulFunctionCall","src":"1909:79:4"},"nodeType":"YulExpressionStatement","src":"1909:79:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1886:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"1894:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1882:3:4"},"nodeType":"YulFunctionCall","src":"1882:17:4"},{"name":"end","nodeType":"YulIdentifier","src":"1901:3:4"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1878:3:4"},"nodeType":"YulFunctionCall","src":"1878:27:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1871:6:4"},"nodeType":"YulFunctionCall","src":"1871:35:4"},"nodeType":"YulIf","src":"1868:122:4"},{"nodeType":"YulAssignment","src":"1999:30:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2022:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2009:12:4"},"nodeType":"YulFunctionCall","src":"2009:20:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1999:6:4"}]},{"body":{"nodeType":"YulBlock","src":"2072:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2074:77:4"},"nodeType":"YulFunctionCall","src":"2074:79:4"},"nodeType":"YulExpressionStatement","src":"2074:79:4"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2044:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"2052:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2041:2:4"},"nodeType":"YulFunctionCall","src":"2041:30:4"},"nodeType":"YulIf","src":"2038:117:4"},{"nodeType":"YulAssignment","src":"2164:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2180:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"2188:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2176:3:4"},"nodeType":"YulFunctionCall","src":"2176:17:4"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2164:8:4"}]},{"body":{"nodeType":"YulBlock","src":"2247:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2249:77:4"},"nodeType":"YulFunctionCall","src":"2249:79:4"},"nodeType":"YulExpressionStatement","src":"2249:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2212:8:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2226:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"2234:4:4","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2222:3:4"},"nodeType":"YulFunctionCall","src":"2222:17:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2208:3:4"},"nodeType":"YulFunctionCall","src":"2208:32:4"},{"name":"end","nodeType":"YulIdentifier","src":"2242:3:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2205:2:4"},"nodeType":"YulFunctionCall","src":"2205:41:4"},"nodeType":"YulIf","src":"2202:128:4"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1825:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"1833:3:4","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1841:8:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"1851:6:4","type":""}],"src":"1768:568:4"},{"body":{"nodeType":"YulBlock","src":"2465:478:4","statements":[{"body":{"nodeType":"YulBlock","src":"2514:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2516:77:4"},"nodeType":"YulFunctionCall","src":"2516:79:4"},"nodeType":"YulExpressionStatement","src":"2516:79:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2493:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"2501:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2489:3:4"},"nodeType":"YulFunctionCall","src":"2489:17:4"},{"name":"end","nodeType":"YulIdentifier","src":"2508:3:4"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2485:3:4"},"nodeType":"YulFunctionCall","src":"2485:27:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2478:6:4"},"nodeType":"YulFunctionCall","src":"2478:35:4"},"nodeType":"YulIf","src":"2475:122:4"},{"nodeType":"YulAssignment","src":"2606:30:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2629:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2616:12:4"},"nodeType":"YulFunctionCall","src":"2616:20:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2606:6:4"}]},{"body":{"nodeType":"YulBlock","src":"2679:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2681:77:4"},"nodeType":"YulFunctionCall","src":"2681:79:4"},"nodeType":"YulExpressionStatement","src":"2681:79:4"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2651:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"2659:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2648:2:4"},"nodeType":"YulFunctionCall","src":"2648:30:4"},"nodeType":"YulIf","src":"2645:117:4"},{"nodeType":"YulAssignment","src":"2771:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2787:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"2795:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2783:3:4"},"nodeType":"YulFunctionCall","src":"2783:17:4"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2771:8:4"}]},{"body":{"nodeType":"YulBlock","src":"2854:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2856:77:4"},"nodeType":"YulFunctionCall","src":"2856:79:4"},"nodeType":"YulExpressionStatement","src":"2856:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2819:8:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2833:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"2841:4:4","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2829:3:4"},"nodeType":"YulFunctionCall","src":"2829:17:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2815:3:4"},"nodeType":"YulFunctionCall","src":"2815:32:4"},{"name":"end","nodeType":"YulIdentifier","src":"2849:3:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2812:2:4"},"nodeType":"YulFunctionCall","src":"2812:41:4"},"nodeType":"YulIf","src":"2809:128:4"}]},"name":"abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2432:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"2440:3:4","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2448:8:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"2458:6:4","type":""}],"src":"2367:576:4"},{"body":{"nodeType":"YulBlock","src":"3065:478:4","statements":[{"body":{"nodeType":"YulBlock","src":"3114:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3116:77:4"},"nodeType":"YulFunctionCall","src":"3116:79:4"},"nodeType":"YulExpressionStatement","src":"3116:79:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3093:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"3101:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3089:3:4"},"nodeType":"YulFunctionCall","src":"3089:17:4"},{"name":"end","nodeType":"YulIdentifier","src":"3108:3:4"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3085:3:4"},"nodeType":"YulFunctionCall","src":"3085:27:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3078:6:4"},"nodeType":"YulFunctionCall","src":"3078:35:4"},"nodeType":"YulIf","src":"3075:122:4"},{"nodeType":"YulAssignment","src":"3206:30:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3229:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3216:12:4"},"nodeType":"YulFunctionCall","src":"3216:20:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3206:6:4"}]},{"body":{"nodeType":"YulBlock","src":"3279:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"3281:77:4"},"nodeType":"YulFunctionCall","src":"3281:79:4"},"nodeType":"YulExpressionStatement","src":"3281:79:4"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3251:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"3259:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3248:2:4"},"nodeType":"YulFunctionCall","src":"3248:30:4"},"nodeType":"YulIf","src":"3245:117:4"},{"nodeType":"YulAssignment","src":"3371:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3387:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"3395:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3383:3:4"},"nodeType":"YulFunctionCall","src":"3383:17:4"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3371:8:4"}]},{"body":{"nodeType":"YulBlock","src":"3454:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"3456:77:4"},"nodeType":"YulFunctionCall","src":"3456:79:4"},"nodeType":"YulExpressionStatement","src":"3456:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3419:8:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3433:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"3441:4:4","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3429:3:4"},"nodeType":"YulFunctionCall","src":"3429:17:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:4"},"nodeType":"YulFunctionCall","src":"3415:32:4"},{"name":"end","nodeType":"YulIdentifier","src":"3449:3:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3412:2:4"},"nodeType":"YulFunctionCall","src":"3412:41:4"},"nodeType":"YulIf","src":"3409:128:4"}]},"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3032:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"3040:3:4","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"3048:8:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"3058:6:4","type":""}],"src":"2964:579:4"},{"body":{"nodeType":"YulBlock","src":"3597:54:4","statements":[{"nodeType":"YulAssignment","src":"3607:38:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3625:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"3632:2:4","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3621:3:4"},"nodeType":"YulFunctionCall","src":"3621:14:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3641:2:4","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3637:3:4"},"nodeType":"YulFunctionCall","src":"3637:7:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:4"},"nodeType":"YulFunctionCall","src":"3617:28:4"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3607:6:4"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3580:5:4","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3590:6:4","type":""}],"src":"3549:102:4"},{"body":{"nodeType":"YulBlock","src":"3685:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3702:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3705:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3695:6:4"},"nodeType":"YulFunctionCall","src":"3695:88:4"},"nodeType":"YulExpressionStatement","src":"3695:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3799:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3802:4:4","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3792:6:4"},"nodeType":"YulFunctionCall","src":"3792:15:4"},"nodeType":"YulExpressionStatement","src":"3792:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3823:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3826:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3816:6:4"},"nodeType":"YulFunctionCall","src":"3816:15:4"},"nodeType":"YulExpressionStatement","src":"3816:15:4"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3657:180:4"},{"body":{"nodeType":"YulBlock","src":"3886:238:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3896:58:4","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3918:6:4"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3948:4:4"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3926:21:4"},"nodeType":"YulFunctionCall","src":"3926:27:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3914:3:4"},"nodeType":"YulFunctionCall","src":"3914:40:4"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3900:10:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"4065:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4067:16:4"},"nodeType":"YulFunctionCall","src":"4067:18:4"},"nodeType":"YulExpressionStatement","src":"4067:18:4"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4008:10:4"},{"kind":"number","nodeType":"YulLiteral","src":"4020:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4005:2:4"},"nodeType":"YulFunctionCall","src":"4005:34:4"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4044:10:4"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4056:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4041:2:4"},"nodeType":"YulFunctionCall","src":"4041:22:4"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4002:2:4"},"nodeType":"YulFunctionCall","src":"4002:62:4"},"nodeType":"YulIf","src":"3999:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4103:2:4","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4107:10:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4096:6:4"},"nodeType":"YulFunctionCall","src":"4096:22:4"},"nodeType":"YulExpressionStatement","src":"4096:22:4"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3872:6:4","type":""},{"name":"size","nodeType":"YulTypedName","src":"3880:4:4","type":""}],"src":"3843:281:4"},{"body":{"nodeType":"YulBlock","src":"4171:88:4","statements":[{"nodeType":"YulAssignment","src":"4181:30:4","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4191:18:4"},"nodeType":"YulFunctionCall","src":"4191:20:4"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4181:6:4"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4240:6:4"},{"name":"size","nodeType":"YulIdentifier","src":"4248:4:4"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4220:19:4"},"nodeType":"YulFunctionCall","src":"4220:33:4"},"nodeType":"YulExpressionStatement","src":"4220:33:4"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4155:4:4","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4164:6:4","type":""}],"src":"4130:129:4"},{"body":{"nodeType":"YulBlock","src":"4347:229:4","statements":[{"body":{"nodeType":"YulBlock","src":"4452:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4454:16:4"},"nodeType":"YulFunctionCall","src":"4454:18:4"},"nodeType":"YulExpressionStatement","src":"4454:18:4"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4424:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"4432:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4421:2:4"},"nodeType":"YulFunctionCall","src":"4421:30:4"},"nodeType":"YulIf","src":"4418:56:4"},{"nodeType":"YulAssignment","src":"4484:25:4","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4496:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"4504:4:4","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4492:3:4"},"nodeType":"YulFunctionCall","src":"4492:17:4"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4484:4:4"}]},{"nodeType":"YulAssignment","src":"4546:23:4","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4558:4:4"},{"kind":"number","nodeType":"YulLiteral","src":"4564:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:4"},"nodeType":"YulFunctionCall","src":"4554:15:4"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4546:4:4"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4331:6:4","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4342:4:4","type":""}],"src":"4265:311:4"},{"body":{"nodeType":"YulBlock","src":"4625:79:4","statements":[{"body":{"nodeType":"YulBlock","src":"4682:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4691:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4694:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4684:6:4"},"nodeType":"YulFunctionCall","src":"4684:12:4"},"nodeType":"YulExpressionStatement","src":"4684:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4648:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4673:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4655:17:4"},"nodeType":"YulFunctionCall","src":"4655:24:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4645:2:4"},"nodeType":"YulFunctionCall","src":"4645:35:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4638:6:4"},"nodeType":"YulFunctionCall","src":"4638:43:4"},"nodeType":"YulIf","src":"4635:63:4"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4618:5:4","type":""}],"src":"4582:122:4"},{"body":{"nodeType":"YulBlock","src":"4762:87:4","statements":[{"nodeType":"YulAssignment","src":"4772:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4794:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4781:12:4"},"nodeType":"YulFunctionCall","src":"4781:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4772:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4837:5:4"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4810:26:4"},"nodeType":"YulFunctionCall","src":"4810:33:4"},"nodeType":"YulExpressionStatement","src":"4810:33:4"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4740:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"4748:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4756:5:4","type":""}],"src":"4710:139:4"},{"body":{"nodeType":"YulBlock","src":"4974:608:4","statements":[{"nodeType":"YulAssignment","src":"4984:90:4","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5066:6:4"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5009:56:4"},"nodeType":"YulFunctionCall","src":"5009:64:4"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4993:15:4"},"nodeType":"YulFunctionCall","src":"4993:81:4"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4984:5:4"}]},{"nodeType":"YulVariableDeclaration","src":"5083:16:4","value":{"name":"array","nodeType":"YulIdentifier","src":"5094:5:4"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5087:3:4","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5116:5:4"},{"name":"length","nodeType":"YulIdentifier","src":"5123:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5109:6:4"},"nodeType":"YulFunctionCall","src":"5109:21:4"},"nodeType":"YulExpressionStatement","src":"5109:21:4"},{"nodeType":"YulAssignment","src":"5139:23:4","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5150:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"5157:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5146:3:4"},"nodeType":"YulFunctionCall","src":"5146:16:4"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5139:3:4"}]},{"nodeType":"YulVariableDeclaration","src":"5172:44:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5190:6:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5202:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"5210:4:4","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5198:3:4"},"nodeType":"YulFunctionCall","src":"5198:17:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5186:3:4"},"nodeType":"YulFunctionCall","src":"5186:30:4"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5176:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"5244:103:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5258:77:4"},"nodeType":"YulFunctionCall","src":"5258:79:4"},"nodeType":"YulExpressionStatement","src":"5258:79:4"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5231:6:4"},{"name":"end","nodeType":"YulIdentifier","src":"5239:3:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5228:2:4"},"nodeType":"YulFunctionCall","src":"5228:15:4"},"nodeType":"YulIf","src":"5225:122:4"},{"body":{"nodeType":"YulBlock","src":"5432:144:4","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:21:4","value":{"name":"src","nodeType":"YulIdentifier","src":"5465:3:4"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"5451:10:4","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5489:3:4"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5515:10:4"},{"name":"end","nodeType":"YulIdentifier","src":"5527:3:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5494:20:4"},"nodeType":"YulFunctionCall","src":"5494:37:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5482:6:4"},"nodeType":"YulFunctionCall","src":"5482:50:4"},"nodeType":"YulExpressionStatement","src":"5482:50:4"},{"nodeType":"YulAssignment","src":"5545:21:4","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5556:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"5561:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5552:3:4"},"nodeType":"YulFunctionCall","src":"5552:14:4"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5545:3:4"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5385:3:4"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5390:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5382:2:4"},"nodeType":"YulFunctionCall","src":"5382:15:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5398:25:4","statements":[{"nodeType":"YulAssignment","src":"5400:21:4","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5411:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"5416:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5407:3:4"},"nodeType":"YulFunctionCall","src":"5407:14:4"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5400:3:4"}]}]},"pre":{"nodeType":"YulBlock","src":"5360:21:4","statements":[{"nodeType":"YulVariableDeclaration","src":"5362:17:4","value":{"name":"offset","nodeType":"YulIdentifier","src":"5373:6:4"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5366:3:4","type":""}]}]},"src":"5356:220:4"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4944:6:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"4952:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"4960:3:4","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4968:5:4","type":""}],"src":"4872:710:4"},{"body":{"nodeType":"YulBlock","src":"5682:293:4","statements":[{"body":{"nodeType":"YulBlock","src":"5731:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5733:77:4"},"nodeType":"YulFunctionCall","src":"5733:79:4"},"nodeType":"YulExpressionStatement","src":"5733:79:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5710:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"5718:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5706:3:4"},"nodeType":"YulFunctionCall","src":"5706:17:4"},{"name":"end","nodeType":"YulIdentifier","src":"5725:3:4"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5702:3:4"},"nodeType":"YulFunctionCall","src":"5702:27:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5695:6:4"},"nodeType":"YulFunctionCall","src":"5695:35:4"},"nodeType":"YulIf","src":"5692:122:4"},{"nodeType":"YulVariableDeclaration","src":"5823:34:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5850:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5837:12:4"},"nodeType":"YulFunctionCall","src":"5837:20:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5827:6:4","type":""}]},{"nodeType":"YulAssignment","src":"5866:103:4","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5942:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"5950:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5938:3:4"},"nodeType":"YulFunctionCall","src":"5938:17:4"},{"name":"length","nodeType":"YulIdentifier","src":"5957:6:4"},{"name":"end","nodeType":"YulIdentifier","src":"5965:3:4"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5875:62:4"},"nodeType":"YulFunctionCall","src":"5875:94:4"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5866:5:4"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5660:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"5668:3:4","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5676:5:4","type":""}],"src":"5605:370:4"},{"body":{"nodeType":"YulBlock","src":"6380:2114:4","statements":[{"body":{"nodeType":"YulBlock","src":"6427:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6429:77:4"},"nodeType":"YulFunctionCall","src":"6429:79:4"},"nodeType":"YulExpressionStatement","src":"6429:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6401:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"6410:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6397:3:4"},"nodeType":"YulFunctionCall","src":"6397:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"6422:3:4","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6393:3:4"},"nodeType":"YulFunctionCall","src":"6393:33:4"},"nodeType":"YulIf","src":"6390:120:4"},{"nodeType":"YulBlock","src":"6520:326:4","statements":[{"nodeType":"YulVariableDeclaration","src":"6535:45:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6566:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6577:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6562:3:4"},"nodeType":"YulFunctionCall","src":"6562:17:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6549:12:4"},"nodeType":"YulFunctionCall","src":"6549:31:4"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6539:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"6627:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6629:77:4"},"nodeType":"YulFunctionCall","src":"6629:79:4"},"nodeType":"YulExpressionStatement","src":"6629:79:4"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6599:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"6607:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6596:2:4"},"nodeType":"YulFunctionCall","src":"6596:30:4"},"nodeType":"YulIf","src":"6593:117:4"},{"nodeType":"YulAssignment","src":"6724:112:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6808:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"6819:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6804:3:4"},"nodeType":"YulFunctionCall","src":"6804:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6828:7:4"}],"functionName":{"name":"abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"6742:61:4"},"nodeType":"YulFunctionCall","src":"6742:94:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6724:6:4"},{"name":"value1","nodeType":"YulIdentifier","src":"6732:6:4"}]}]},{"nodeType":"YulBlock","src":"6856:327:4","statements":[{"nodeType":"YulVariableDeclaration","src":"6871:46:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6902:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6913:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6898:3:4"},"nodeType":"YulFunctionCall","src":"6898:18:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6885:12:4"},"nodeType":"YulFunctionCall","src":"6885:32:4"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6875:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"6964:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6966:77:4"},"nodeType":"YulFunctionCall","src":"6966:79:4"},"nodeType":"YulExpressionStatement","src":"6966:79:4"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6936:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"6944:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6933:2:4"},"nodeType":"YulFunctionCall","src":"6933:30:4"},"nodeType":"YulIf","src":"6930:117:4"},{"nodeType":"YulAssignment","src":"7061:112:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7145:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"7156:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:4"},"nodeType":"YulFunctionCall","src":"7141:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7165:7:4"}],"functionName":{"name":"abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7079:61:4"},"nodeType":"YulFunctionCall","src":"7079:94:4"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7061:6:4"},{"name":"value3","nodeType":"YulIdentifier","src":"7069:6:4"}]}]},{"nodeType":"YulBlock","src":"7193:313:4","statements":[{"nodeType":"YulVariableDeclaration","src":"7208:46:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7239:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"7250:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7235:3:4"},"nodeType":"YulFunctionCall","src":"7235:18:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7222:12:4"},"nodeType":"YulFunctionCall","src":"7222:32:4"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7212:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"7301:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7303:77:4"},"nodeType":"YulFunctionCall","src":"7303:79:4"},"nodeType":"YulExpressionStatement","src":"7303:79:4"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7273:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"7281:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7270:2:4"},"nodeType":"YulFunctionCall","src":"7270:30:4"},"nodeType":"YulIf","src":"7267:117:4"},{"nodeType":"YulAssignment","src":"7398:98:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7468:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"7479:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7464:3:4"},"nodeType":"YulFunctionCall","src":"7464:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7488:7:4"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7416:47:4"},"nodeType":"YulFunctionCall","src":"7416:80:4"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7398:6:4"},{"name":"value5","nodeType":"YulIdentifier","src":"7406:6:4"}]}]},{"nodeType":"YulBlock","src":"7516:321:4","statements":[{"nodeType":"YulVariableDeclaration","src":"7531:46:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7562:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"7573:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7558:3:4"},"nodeType":"YulFunctionCall","src":"7558:18:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7545:12:4"},"nodeType":"YulFunctionCall","src":"7545:32:4"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7535:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"7624:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7626:77:4"},"nodeType":"YulFunctionCall","src":"7626:79:4"},"nodeType":"YulExpressionStatement","src":"7626:79:4"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7596:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"7604:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7593:2:4"},"nodeType":"YulFunctionCall","src":"7593:30:4"},"nodeType":"YulIf","src":"7590:117:4"},{"nodeType":"YulAssignment","src":"7721:106:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7799:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"7810:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7795:3:4"},"nodeType":"YulFunctionCall","src":"7795:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7819:7:4"}],"functionName":{"name":"abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7739:55:4"},"nodeType":"YulFunctionCall","src":"7739:88:4"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7721:6:4"},{"name":"value7","nodeType":"YulIdentifier","src":"7729:6:4"}]}]},{"nodeType":"YulBlock","src":"7847:325:4","statements":[{"nodeType":"YulVariableDeclaration","src":"7862:47:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7893:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"7904:3:4","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7889:3:4"},"nodeType":"YulFunctionCall","src":"7889:19:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7876:12:4"},"nodeType":"YulFunctionCall","src":"7876:33:4"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7866:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"7956:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7958:77:4"},"nodeType":"YulFunctionCall","src":"7958:79:4"},"nodeType":"YulExpressionStatement","src":"7958:79:4"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7928:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"7936:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7925:2:4"},"nodeType":"YulFunctionCall","src":"7925:30:4"},"nodeType":"YulIf","src":"7922:117:4"},{"nodeType":"YulAssignment","src":"8053:109:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8134:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"8145:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8130:3:4"},"nodeType":"YulFunctionCall","src":"8130:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8154:7:4"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"8071:58:4"},"nodeType":"YulFunctionCall","src":"8071:91:4"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"8053:6:4"},{"name":"value9","nodeType":"YulIdentifier","src":"8061:6:4"}]}]},{"nodeType":"YulBlock","src":"8182:305:4","statements":[{"nodeType":"YulVariableDeclaration","src":"8197:47:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8228:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"8239:3:4","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:4"},"nodeType":"YulFunctionCall","src":"8224:19:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8211:12:4"},"nodeType":"YulFunctionCall","src":"8211:33:4"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8201:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"8291:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8293:77:4"},"nodeType":"YulFunctionCall","src":"8293:79:4"},"nodeType":"YulExpressionStatement","src":"8293:79:4"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8263:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"8271:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8260:2:4"},"nodeType":"YulFunctionCall","src":"8260:30:4"},"nodeType":"YulIf","src":"8257:117:4"},{"nodeType":"YulAssignment","src":"8388:89:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8449:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"8460:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8445:3:4"},"nodeType":"YulFunctionCall","src":"8445:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8469:7:4"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8399:45:4"},"nodeType":"YulFunctionCall","src":"8399:78:4"},"variableNames":[{"name":"value10","nodeType":"YulIdentifier","src":"8388:7:4"}]}]}]},"name":"abi_decode_tuple_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_payable_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6269:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6280:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6292:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6300:6:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6308:6:4","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6316:6:4","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6324:6:4","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6332:6:4","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6340:6:4","type":""},{"name":"value7","nodeType":"YulTypedName","src":"6348:6:4","type":""},{"name":"value8","nodeType":"YulTypedName","src":"6356:6:4","type":""},{"name":"value9","nodeType":"YulTypedName","src":"6364:6:4","type":""},{"name":"value10","nodeType":"YulTypedName","src":"6372:7:4","type":""}],"src":"5981:2513:4"},{"body":{"nodeType":"YulBlock","src":"8566:263:4","statements":[{"body":{"nodeType":"YulBlock","src":"8612:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8614:77:4"},"nodeType":"YulFunctionCall","src":"8614:79:4"},"nodeType":"YulExpressionStatement","src":"8614:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8587:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"8596:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8583:3:4"},"nodeType":"YulFunctionCall","src":"8583:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"8608:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8579:3:4"},"nodeType":"YulFunctionCall","src":"8579:32:4"},"nodeType":"YulIf","src":"8576:119:4"},{"nodeType":"YulBlock","src":"8705:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"8720:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"8734:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8724:6:4","type":""}]},{"nodeType":"YulAssignment","src":"8749:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8784:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"8795:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8780:3:4"},"nodeType":"YulFunctionCall","src":"8780:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8804:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8759:20:4"},"nodeType":"YulFunctionCall","src":"8759:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8749:6:4"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8536:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8547:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8559:6:4","type":""}],"src":"8500:329:4"},{"body":{"nodeType":"YulBlock","src":"8880:81:4","statements":[{"nodeType":"YulAssignment","src":"8890:65:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8905:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"8912:42:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8901:3:4"},"nodeType":"YulFunctionCall","src":"8901:54:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8890:7:4"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8862:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8872:7:4","type":""}],"src":"8835:126:4"},{"body":{"nodeType":"YulBlock","src":"9012:51:4","statements":[{"nodeType":"YulAssignment","src":"9022:35:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9051:5:4"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9033:17:4"},"nodeType":"YulFunctionCall","src":"9033:24:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9022:7:4"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8994:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9004:7:4","type":""}],"src":"8967:96:4"},{"body":{"nodeType":"YulBlock","src":"9134:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9151:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9174:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9156:17:4"},"nodeType":"YulFunctionCall","src":"9156:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9144:6:4"},"nodeType":"YulFunctionCall","src":"9144:37:4"},"nodeType":"YulExpressionStatement","src":"9144:37:4"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9122:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9129:3:4","type":""}],"src":"9069:118:4"},{"body":{"nodeType":"YulBlock","src":"9291:124:4","statements":[{"nodeType":"YulAssignment","src":"9301:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9313:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"9324:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9309:3:4"},"nodeType":"YulFunctionCall","src":"9309:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9301:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9381:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9394:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"9405:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9390:3:4"},"nodeType":"YulFunctionCall","src":"9390:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9337:43:4"},"nodeType":"YulFunctionCall","src":"9337:71:4"},"nodeType":"YulExpressionStatement","src":"9337:71:4"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9263:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9275:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9286:4:4","type":""}],"src":"9193:222:4"},{"body":{"nodeType":"YulBlock","src":"9453:28:4","statements":[{"nodeType":"YulAssignment","src":"9463:12:4","value":{"name":"value","nodeType":"YulIdentifier","src":"9470:5:4"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9463:3:4"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9439:5:4","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9449:3:4","type":""}],"src":"9421:60:4"},{"body":{"nodeType":"YulBlock","src":"9547:82:4","statements":[{"nodeType":"YulAssignment","src":"9557:66:4","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9615:5:4"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9597:17:4"},"nodeType":"YulFunctionCall","src":"9597:24:4"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"9588:8:4"},"nodeType":"YulFunctionCall","src":"9588:34:4"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9570:17:4"},"nodeType":"YulFunctionCall","src":"9570:53:4"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9557:9:4"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9527:5:4","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9537:9:4","type":""}],"src":"9487:142:4"},{"body":{"nodeType":"YulBlock","src":"9695:66:4","statements":[{"nodeType":"YulAssignment","src":"9705:50:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9749:5:4"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"9718:30:4"},"nodeType":"YulFunctionCall","src":"9718:37:4"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9705:9:4"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9675:5:4","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9685:9:4","type":""}],"src":"9635:126:4"},{"body":{"nodeType":"YulBlock","src":"9840:66:4","statements":[{"nodeType":"YulAssignment","src":"9850:50:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9894:5:4"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"9863:30:4"},"nodeType":"YulFunctionCall","src":"9863:37:4"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9850:9:4"}]}]},"name":"convert_t_contract$_IWETH_$227_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9820:5:4","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9830:9:4","type":""}],"src":"9767:139:4"},{"body":{"nodeType":"YulBlock","src":"9990:79:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10007:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10056:5:4"}],"functionName":{"name":"convert_t_contract$_IWETH_$227_to_t_address","nodeType":"YulIdentifier","src":"10012:43:4"},"nodeType":"YulFunctionCall","src":"10012:50:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10000:6:4"},"nodeType":"YulFunctionCall","src":"10000:63:4"},"nodeType":"YulExpressionStatement","src":"10000:63:4"}]},"name":"abi_encode_t_contract$_IWETH_$227_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9978:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9985:3:4","type":""}],"src":"9912:157:4"},{"body":{"nodeType":"YulBlock","src":"10186:137:4","statements":[{"nodeType":"YulAssignment","src":"10196:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10208:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"10219:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10204:3:4"},"nodeType":"YulFunctionCall","src":"10204:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10196:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10289:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10302:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"10313:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10298:3:4"},"nodeType":"YulFunctionCall","src":"10298:17:4"}],"functionName":{"name":"abi_encode_t_contract$_IWETH_$227_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10232:56:4"},"nodeType":"YulFunctionCall","src":"10232:84:4"},"nodeType":"YulExpressionStatement","src":"10232:84:4"}]},"name":"abi_encode_tuple_t_contract$_IWETH_$227__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10158:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10170:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10181:4:4","type":""}],"src":"10075:248:4"},{"body":{"nodeType":"YulBlock","src":"10372:79:4","statements":[{"body":{"nodeType":"YulBlock","src":"10429:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10438:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10441:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10431:6:4"},"nodeType":"YulFunctionCall","src":"10431:12:4"},"nodeType":"YulExpressionStatement","src":"10431:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10395:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10420:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"10402:17:4"},"nodeType":"YulFunctionCall","src":"10402:24:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10392:2:4"},"nodeType":"YulFunctionCall","src":"10392:35:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10385:6:4"},"nodeType":"YulFunctionCall","src":"10385:43:4"},"nodeType":"YulIf","src":"10382:63:4"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10365:5:4","type":""}],"src":"10329:122:4"},{"body":{"nodeType":"YulBlock","src":"10509:87:4","statements":[{"nodeType":"YulAssignment","src":"10519:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10541:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10528:12:4"},"nodeType":"YulFunctionCall","src":"10528:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10519:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10584:5:4"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"10557:26:4"},"nodeType":"YulFunctionCall","src":"10557:33:4"},"nodeType":"YulExpressionStatement","src":"10557:33:4"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10487:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"10495:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10503:5:4","type":""}],"src":"10457:139:4"},{"body":{"nodeType":"YulBlock","src":"10668:263:4","statements":[{"body":{"nodeType":"YulBlock","src":"10714:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10716:77:4"},"nodeType":"YulFunctionCall","src":"10716:79:4"},"nodeType":"YulExpressionStatement","src":"10716:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10689:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"10698:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10685:3:4"},"nodeType":"YulFunctionCall","src":"10685:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"10710:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10681:3:4"},"nodeType":"YulFunctionCall","src":"10681:32:4"},"nodeType":"YulIf","src":"10678:119:4"},{"nodeType":"YulBlock","src":"10807:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"10822:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"10836:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10826:6:4","type":""}]},{"nodeType":"YulAssignment","src":"10851:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10886:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"10897:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10882:3:4"},"nodeType":"YulFunctionCall","src":"10882:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10906:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10861:20:4"},"nodeType":"YulFunctionCall","src":"10861:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10851:6:4"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10638:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10649:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10661:6:4","type":""}],"src":"10602:329:4"},{"body":{"nodeType":"YulBlock","src":"10965:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10982:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10985:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10975:6:4"},"nodeType":"YulFunctionCall","src":"10975:88:4"},"nodeType":"YulExpressionStatement","src":"10975:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11079:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11082:4:4","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11072:6:4"},"nodeType":"YulFunctionCall","src":"11072:15:4"},"nodeType":"YulExpressionStatement","src":"11072:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11103:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11106:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11096:6:4"},"nodeType":"YulFunctionCall","src":"11096:15:4"},"nodeType":"YulExpressionStatement","src":"11096:15:4"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10937:180:4"},{"body":{"nodeType":"YulBlock","src":"11168:146:4","statements":[{"nodeType":"YulAssignment","src":"11178:25:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11201:1:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11183:17:4"},"nodeType":"YulFunctionCall","src":"11183:20:4"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11178:1:4"}]},{"nodeType":"YulAssignment","src":"11212:25:4","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11235:1:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11217:17:4"},"nodeType":"YulFunctionCall","src":"11217:20:4"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11212:1:4"}]},{"body":{"nodeType":"YulBlock","src":"11259:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11261:16:4"},"nodeType":"YulFunctionCall","src":"11261:18:4"},"nodeType":"YulExpressionStatement","src":"11261:18:4"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11253:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"11256:1:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11250:2:4"},"nodeType":"YulFunctionCall","src":"11250:8:4"},"nodeType":"YulIf","src":"11247:34:4"},{"nodeType":"YulAssignment","src":"11291:17:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11303:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"11306:1:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11299:3:4"},"nodeType":"YulFunctionCall","src":"11299:9:4"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11291:4:4"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11154:1:4","type":""},{"name":"y","nodeType":"YulTypedName","src":"11157:1:4","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11163:4:4","type":""}],"src":"11123:191:4"},{"body":{"nodeType":"YulBlock","src":"11446:206:4","statements":[{"nodeType":"YulAssignment","src":"11456:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11468:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"11479:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11464:3:4"},"nodeType":"YulFunctionCall","src":"11464:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11456:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11536:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11549:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"11560:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11545:3:4"},"nodeType":"YulFunctionCall","src":"11545:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11492:43:4"},"nodeType":"YulFunctionCall","src":"11492:71:4"},"nodeType":"YulExpressionStatement","src":"11492:71:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11617:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11630:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"11641:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11626:3:4"},"nodeType":"YulFunctionCall","src":"11626:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11573:43:4"},"nodeType":"YulFunctionCall","src":"11573:72:4"},"nodeType":"YulExpressionStatement","src":"11573:72:4"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11410:9:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11422:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11430:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11441:4:4","type":""}],"src":"11320:332:4"},{"body":{"nodeType":"YulBlock","src":"11700:48:4","statements":[{"nodeType":"YulAssignment","src":"11710:32:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11735:5:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11728:6:4"},"nodeType":"YulFunctionCall","src":"11728:13:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11721:6:4"},"nodeType":"YulFunctionCall","src":"11721:21:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11710:7:4"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11682:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11692:7:4","type":""}],"src":"11658:90:4"},{"body":{"nodeType":"YulBlock","src":"11794:76:4","statements":[{"body":{"nodeType":"YulBlock","src":"11848:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11857:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11860:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11850:6:4"},"nodeType":"YulFunctionCall","src":"11850:12:4"},"nodeType":"YulExpressionStatement","src":"11850:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11817:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11839:5:4"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"11824:14:4"},"nodeType":"YulFunctionCall","src":"11824:21:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11814:2:4"},"nodeType":"YulFunctionCall","src":"11814:32:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11807:6:4"},"nodeType":"YulFunctionCall","src":"11807:40:4"},"nodeType":"YulIf","src":"11804:60:4"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11787:5:4","type":""}],"src":"11754:116:4"},{"body":{"nodeType":"YulBlock","src":"11936:77:4","statements":[{"nodeType":"YulAssignment","src":"11946:22:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11961:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11955:5:4"},"nodeType":"YulFunctionCall","src":"11955:13:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11946:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12001:5:4"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"11977:23:4"},"nodeType":"YulFunctionCall","src":"11977:30:4"},"nodeType":"YulExpressionStatement","src":"11977:30:4"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11914:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"11922:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11930:5:4","type":""}],"src":"11876:137:4"},{"body":{"nodeType":"YulBlock","src":"12093:271:4","statements":[{"body":{"nodeType":"YulBlock","src":"12139:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12141:77:4"},"nodeType":"YulFunctionCall","src":"12141:79:4"},"nodeType":"YulExpressionStatement","src":"12141:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12114:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"12123:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12110:3:4"},"nodeType":"YulFunctionCall","src":"12110:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"12135:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12106:3:4"},"nodeType":"YulFunctionCall","src":"12106:32:4"},"nodeType":"YulIf","src":"12103:119:4"},{"nodeType":"YulBlock","src":"12232:125:4","statements":[{"nodeType":"YulVariableDeclaration","src":"12247:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"12261:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12251:6:4","type":""}]},{"nodeType":"YulAssignment","src":"12276:71:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12319:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"12330:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12315:3:4"},"nodeType":"YulFunctionCall","src":"12315:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12339:7:4"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"12286:28:4"},"nodeType":"YulFunctionCall","src":"12286:61:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12276:6:4"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12063:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12074:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12086:6:4","type":""}],"src":"12019:345:4"},{"body":{"nodeType":"YulBlock","src":"12398:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12415:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12418:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12408:6:4"},"nodeType":"YulFunctionCall","src":"12408:88:4"},"nodeType":"YulExpressionStatement","src":"12408:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12512:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12515:4:4","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12505:6:4"},"nodeType":"YulFunctionCall","src":"12505:15:4"},"nodeType":"YulExpressionStatement","src":"12505:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12536:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12539:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12529:6:4"},"nodeType":"YulFunctionCall","src":"12529:15:4"},"nodeType":"YulExpressionStatement","src":"12529:15:4"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12370:180:4"},{"body":{"nodeType":"YulBlock","src":"12682:206:4","statements":[{"nodeType":"YulAssignment","src":"12692:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12704:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"12715:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12700:3:4"},"nodeType":"YulFunctionCall","src":"12700:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12692:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12772:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12785:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"12796:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12781:3:4"},"nodeType":"YulFunctionCall","src":"12781:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12728:43:4"},"nodeType":"YulFunctionCall","src":"12728:71:4"},"nodeType":"YulExpressionStatement","src":"12728:71:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12853:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12866:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"12877:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12862:3:4"},"nodeType":"YulFunctionCall","src":"12862:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12809:43:4"},"nodeType":"YulFunctionCall","src":"12809:72:4"},"nodeType":"YulExpressionStatement","src":"12809:72:4"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12646:9:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12658:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12666:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12677:4:4","type":""}],"src":"12556:332:4"},{"body":{"nodeType":"YulBlock","src":"12953:51:4","statements":[{"nodeType":"YulAssignment","src":"12963:35:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12992:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12974:17:4"},"nodeType":"YulFunctionCall","src":"12974:24:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12963:7:4"}]}]},"name":"cleanup_t_contract$_IERC20_$190","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12935:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12945:7:4","type":""}],"src":"12894:110:4"},{"body":{"nodeType":"YulBlock","src":"13067:93:4","statements":[{"body":{"nodeType":"YulBlock","src":"13138:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13147:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13150:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13140:6:4"},"nodeType":"YulFunctionCall","src":"13140:12:4"},"nodeType":"YulExpressionStatement","src":"13140:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13090:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13129:5:4"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$190","nodeType":"YulIdentifier","src":"13097:31:4"},"nodeType":"YulFunctionCall","src":"13097:38:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13087:2:4"},"nodeType":"YulFunctionCall","src":"13087:49:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13080:6:4"},"nodeType":"YulFunctionCall","src":"13080:57:4"},"nodeType":"YulIf","src":"13077:77:4"}]},"name":"validator_revert_t_contract$_IERC20_$190","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13060:5:4","type":""}],"src":"13010:150:4"},{"body":{"nodeType":"YulBlock","src":"13232:101:4","statements":[{"nodeType":"YulAssignment","src":"13242:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13264:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13251:12:4"},"nodeType":"YulFunctionCall","src":"13251:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13242:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13321:5:4"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$190","nodeType":"YulIdentifier","src":"13280:40:4"},"nodeType":"YulFunctionCall","src":"13280:47:4"},"nodeType":"YulExpressionStatement","src":"13280:47:4"}]},"name":"abi_decode_t_contract$_IERC20_$190","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13210:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"13218:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13226:5:4","type":""}],"src":"13166:167:4"},{"body":{"nodeType":"YulBlock","src":"13419:277:4","statements":[{"body":{"nodeType":"YulBlock","src":"13465:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13467:77:4"},"nodeType":"YulFunctionCall","src":"13467:79:4"},"nodeType":"YulExpressionStatement","src":"13467:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13440:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"13449:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13436:3:4"},"nodeType":"YulFunctionCall","src":"13436:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"13461:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13432:3:4"},"nodeType":"YulFunctionCall","src":"13432:32:4"},"nodeType":"YulIf","src":"13429:119:4"},{"nodeType":"YulBlock","src":"13558:131:4","statements":[{"nodeType":"YulVariableDeclaration","src":"13573:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"13587:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13577:6:4","type":""}]},{"nodeType":"YulAssignment","src":"13602:77:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13651:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"13662:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13647:3:4"},"nodeType":"YulFunctionCall","src":"13647:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13671:7:4"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$190","nodeType":"YulIdentifier","src":"13612:34:4"},"nodeType":"YulFunctionCall","src":"13612:67:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13602:6:4"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$190","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13389:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13400:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13412:6:4","type":""}],"src":"13339:357:4"},{"body":{"nodeType":"YulBlock","src":"13746:261:4","statements":[{"nodeType":"YulAssignment","src":"13756:25:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13779:1:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13761:17:4"},"nodeType":"YulFunctionCall","src":"13761:20:4"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"13756:1:4"}]},{"nodeType":"YulAssignment","src":"13790:25:4","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13813:1:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13795:17:4"},"nodeType":"YulFunctionCall","src":"13795:20:4"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"13790:1:4"}]},{"body":{"nodeType":"YulBlock","src":"13953:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13955:16:4"},"nodeType":"YulFunctionCall","src":"13955:18:4"},"nodeType":"YulExpressionStatement","src":"13955:18:4"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13874:1:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13881:66:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"13949:1:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13877:3:4"},"nodeType":"YulFunctionCall","src":"13877:74:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13871:2:4"},"nodeType":"YulFunctionCall","src":"13871:81:4"},"nodeType":"YulIf","src":"13868:107:4"},{"nodeType":"YulAssignment","src":"13985:16:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13996:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"13999:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13992:3:4"},"nodeType":"YulFunctionCall","src":"13992:9:4"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"13985:3:4"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13733:1:4","type":""},{"name":"y","nodeType":"YulTypedName","src":"13736:1:4","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13742:3:4","type":""}],"src":"13702:305:4"},{"body":{"nodeType":"YulBlock","src":"14066:51:4","statements":[{"nodeType":"YulAssignment","src":"14076:35:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14105:5:4"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"14087:17:4"},"nodeType":"YulFunctionCall","src":"14087:24:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"14076:7:4"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14048:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"14058:7:4","type":""}],"src":"14013:104:4"},{"body":{"nodeType":"YulBlock","src":"14174:87:4","statements":[{"body":{"nodeType":"YulBlock","src":"14239:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14248:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14251:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14241:6:4"},"nodeType":"YulFunctionCall","src":"14241:12:4"},"nodeType":"YulExpressionStatement","src":"14241:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14197:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14230:5:4"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"14204:25:4"},"nodeType":"YulFunctionCall","src":"14204:32:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14194:2:4"},"nodeType":"YulFunctionCall","src":"14194:43:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14187:6:4"},"nodeType":"YulFunctionCall","src":"14187:51:4"},"nodeType":"YulIf","src":"14184:71:4"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14167:5:4","type":""}],"src":"14123:138:4"},{"body":{"nodeType":"YulBlock","src":"14327:95:4","statements":[{"nodeType":"YulAssignment","src":"14337:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14359:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14346:12:4"},"nodeType":"YulFunctionCall","src":"14346:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14337:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14410:5:4"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"14375:34:4"},"nodeType":"YulFunctionCall","src":"14375:41:4"},"nodeType":"YulExpressionStatement","src":"14375:41:4"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14305:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"14313:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14321:5:4","type":""}],"src":"14267:155:4"},{"body":{"nodeType":"YulBlock","src":"14502:271:4","statements":[{"body":{"nodeType":"YulBlock","src":"14548:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14550:77:4"},"nodeType":"YulFunctionCall","src":"14550:79:4"},"nodeType":"YulExpressionStatement","src":"14550:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14523:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"14532:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14519:3:4"},"nodeType":"YulFunctionCall","src":"14519:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"14544:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14515:3:4"},"nodeType":"YulFunctionCall","src":"14515:32:4"},"nodeType":"YulIf","src":"14512:119:4"},{"nodeType":"YulBlock","src":"14641:125:4","statements":[{"nodeType":"YulVariableDeclaration","src":"14656:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"14670:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14660:6:4","type":""}]},{"nodeType":"YulAssignment","src":"14685:71:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14728:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"14739:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14724:3:4"},"nodeType":"YulFunctionCall","src":"14724:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14748:7:4"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"14695:28:4"},"nodeType":"YulFunctionCall","src":"14695:61:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14685:6:4"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14472:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14483:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14495:6:4","type":""}],"src":"14428:345:4"},{"body":{"nodeType":"YulBlock","src":"14868:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14885:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14888:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14878:6:4"},"nodeType":"YulFunctionCall","src":"14878:12:4"},"nodeType":"YulExpressionStatement","src":"14878:12:4"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"14779:117:4"},{"body":{"nodeType":"YulBlock","src":"14991:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15008:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15011:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15001:6:4"},"nodeType":"YulFunctionCall","src":"15001:12:4"},"nodeType":"YulExpressionStatement","src":"15001:12:4"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"14902:117:4"},{"body":{"nodeType":"YulBlock","src":"15114:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15131:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15134:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15124:6:4"},"nodeType":"YulFunctionCall","src":"15124:12:4"},"nodeType":"YulExpressionStatement","src":"15124:12:4"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"15025:117:4"},{"body":{"nodeType":"YulBlock","src":"15238:634:4","statements":[{"nodeType":"YulVariableDeclaration","src":"15248:51:4","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"15287:11:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15274:12:4"},"nodeType":"YulFunctionCall","src":"15274:25:4"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"15252:18:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"15393:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"15395:77:4"},"nodeType":"YulFunctionCall","src":"15395:79:4"},"nodeType":"YulExpressionStatement","src":"15395:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"15322:18:4"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"15350:12:4"},"nodeType":"YulFunctionCall","src":"15350:14:4"},{"name":"base_ref","nodeType":"YulIdentifier","src":"15366:8:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15346:3:4"},"nodeType":"YulFunctionCall","src":"15346:29:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15381:4:4","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"15387:1:4","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15377:3:4"},"nodeType":"YulFunctionCall","src":"15377:12:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15342:3:4"},"nodeType":"YulFunctionCall","src":"15342:48:4"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15318:3:4"},"nodeType":"YulFunctionCall","src":"15318:73:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15311:6:4"},"nodeType":"YulFunctionCall","src":"15311:81:4"},"nodeType":"YulIf","src":"15308:168:4"},{"nodeType":"YulAssignment","src":"15485:41:4","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"15497:8:4"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"15507:18:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15493:3:4"},"nodeType":"YulFunctionCall","src":"15493:33:4"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"15485:4:4"}]},{"nodeType":"YulAssignment","src":"15536:28:4","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"15559:4:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15546:12:4"},"nodeType":"YulFunctionCall","src":"15546:18:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15536:6:4"}]},{"body":{"nodeType":"YulBlock","src":"15607:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"15609:77:4"},"nodeType":"YulFunctionCall","src":"15609:79:4"},"nodeType":"YulExpressionStatement","src":"15609:79:4"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15579:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"15587:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15576:2:4"},"nodeType":"YulFunctionCall","src":"15576:30:4"},"nodeType":"YulIf","src":"15573:117:4"},{"nodeType":"YulAssignment","src":"15699:21:4","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"15711:4:4"},{"kind":"number","nodeType":"YulLiteral","src":"15717:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15707:3:4"},"nodeType":"YulFunctionCall","src":"15707:13:4"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"15699:4:4"}]},{"body":{"nodeType":"YulBlock","src":"15782:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"15784:77:4"},"nodeType":"YulFunctionCall","src":"15784:79:4"},"nodeType":"YulExpressionStatement","src":"15784:79:4"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"15736:4:4"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"15746:12:4"},"nodeType":"YulFunctionCall","src":"15746:14:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15766:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"15774:4:4","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15762:3:4"},"nodeType":"YulFunctionCall","src":"15762:17:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15742:3:4"},"nodeType":"YulFunctionCall","src":"15742:38:4"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"15732:3:4"},"nodeType":"YulFunctionCall","src":"15732:49:4"},"nodeType":"YulIf","src":"15729:136:4"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"15199:8:4","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"15209:11:4","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"15225:4:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"15231:6:4","type":""}],"src":"15148:724:4"},{"body":{"nodeType":"YulBlock","src":"15952:66:4","statements":[{"nodeType":"YulAssignment","src":"15962:50:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16006:5:4"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"15975:30:4"},"nodeType":"YulFunctionCall","src":"15975:37:4"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"15962:9:4"}]}]},"name":"convert_t_contract$_IERC20_$190_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15932:5:4","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"15942:9:4","type":""}],"src":"15878:140:4"},{"body":{"nodeType":"YulBlock","src":"16103:80:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16120:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16170:5:4"}],"functionName":{"name":"convert_t_contract$_IERC20_$190_to_t_address","nodeType":"YulIdentifier","src":"16125:44:4"},"nodeType":"YulFunctionCall","src":"16125:51:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16113:6:4"},"nodeType":"YulFunctionCall","src":"16113:64:4"},"nodeType":"YulExpressionStatement","src":"16113:64:4"}]},"name":"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16091:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16098:3:4","type":""}],"src":"16024:159:4"},{"body":{"nodeType":"YulBlock","src":"16329:220:4","statements":[{"nodeType":"YulAssignment","src":"16339:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16351:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"16362:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16347:3:4"},"nodeType":"YulFunctionCall","src":"16347:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16339:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16433:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16446:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"16457:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16442:3:4"},"nodeType":"YulFunctionCall","src":"16442:17:4"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16375:57:4"},"nodeType":"YulFunctionCall","src":"16375:85:4"},"nodeType":"YulExpressionStatement","src":"16375:85:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16514:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16527:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"16538:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16523:3:4"},"nodeType":"YulFunctionCall","src":"16523:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16470:43:4"},"nodeType":"YulFunctionCall","src":"16470:72:4"},"nodeType":"YulExpressionStatement","src":"16470:72:4"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$190_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16293:9:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16305:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16313:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16324:4:4","type":""}],"src":"16189:360:4"},{"body":{"nodeType":"YulBlock","src":"16598:190:4","statements":[{"nodeType":"YulAssignment","src":"16608:33:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16635:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16617:17:4"},"nodeType":"YulFunctionCall","src":"16617:24:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16608:5:4"}]},{"body":{"nodeType":"YulBlock","src":"16731:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16733:16:4"},"nodeType":"YulFunctionCall","src":"16733:18:4"},"nodeType":"YulExpressionStatement","src":"16733:18:4"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16656:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"16663:66:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16653:2:4"},"nodeType":"YulFunctionCall","src":"16653:77:4"},"nodeType":"YulIf","src":"16650:103:4"},{"nodeType":"YulAssignment","src":"16762:20:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16773:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"16780:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16769:3:4"},"nodeType":"YulFunctionCall","src":"16769:13:4"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16762:3:4"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16584:5:4","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16594:3:4","type":""}],"src":"16555:233:4"},{"body":{"nodeType":"YulBlock","src":"16847:32:4","statements":[{"nodeType":"YulAssignment","src":"16857:16:4","value":{"name":"value","nodeType":"YulIdentifier","src":"16868:5:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16857:7:4"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16829:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16839:7:4","type":""}],"src":"16794:85:4"},{"body":{"nodeType":"YulBlock","src":"16953:90:4","statements":[{"nodeType":"YulAssignment","src":"16963:74:4","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17029:5:4"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"17003:25:4"},"nodeType":"YulFunctionCall","src":"17003:32:4"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"16994:8:4"},"nodeType":"YulFunctionCall","src":"16994:42:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16976:17:4"},"nodeType":"YulFunctionCall","src":"16976:61:4"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"16963:9:4"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16933:5:4","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"16943:9:4","type":""}],"src":"16885:158:4"},{"body":{"nodeType":"YulBlock","src":"17122:74:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17139:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17183:5:4"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"17144:38:4"},"nodeType":"YulFunctionCall","src":"17144:45:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17132:6:4"},"nodeType":"YulFunctionCall","src":"17132:58:4"},"nodeType":"YulExpressionStatement","src":"17132:58:4"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17110:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17117:3:4","type":""}],"src":"17049:147:4"},{"body":{"nodeType":"YulBlock","src":"17308:132:4","statements":[{"nodeType":"YulAssignment","src":"17318:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17330:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"17341:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17326:3:4"},"nodeType":"YulFunctionCall","src":"17326:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17318:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17406:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17419:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"17430:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17415:3:4"},"nodeType":"YulFunctionCall","src":"17415:17:4"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17354:51:4"},"nodeType":"YulFunctionCall","src":"17354:79:4"},"nodeType":"YulExpressionStatement","src":"17354:79:4"}]},"name":"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17280:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17292:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17303:4:4","type":""}],"src":"17202:238:4"},{"body":{"nodeType":"YulBlock","src":"17542:73:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17559:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"17564:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17552:6:4"},"nodeType":"YulFunctionCall","src":"17552:19:4"},"nodeType":"YulExpressionStatement","src":"17552:19:4"},{"nodeType":"YulAssignment","src":"17580:29:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17599:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"17604:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17595:3:4"},"nodeType":"YulFunctionCall","src":"17595:14:4"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17580:11:4"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17514:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"17519:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17530:11:4","type":""}],"src":"17446:169:4"},{"body":{"nodeType":"YulBlock","src":"17727:119:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17749:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"17757:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17745:3:4"},"nodeType":"YulFunctionCall","src":"17745:14:4"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"17761:34:4","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17738:6:4"},"nodeType":"YulFunctionCall","src":"17738:58:4"},"nodeType":"YulExpressionStatement","src":"17738:58:4"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17817:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"17825:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17813:3:4"},"nodeType":"YulFunctionCall","src":"17813:15:4"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"17830:8:4","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17806:6:4"},"nodeType":"YulFunctionCall","src":"17806:33:4"},"nodeType":"YulExpressionStatement","src":"17806:33:4"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17719:6:4","type":""}],"src":"17621:225:4"},{"body":{"nodeType":"YulBlock","src":"17998:220:4","statements":[{"nodeType":"YulAssignment","src":"18008:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18074:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"18079:2:4","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18015:58:4"},"nodeType":"YulFunctionCall","src":"18015:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18008:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18180:3:4"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"18091:88:4"},"nodeType":"YulFunctionCall","src":"18091:93:4"},"nodeType":"YulExpressionStatement","src":"18091:93:4"},{"nodeType":"YulAssignment","src":"18193:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18204:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"18209:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18200:3:4"},"nodeType":"YulFunctionCall","src":"18200:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18193:3:4"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17986:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17994:3:4","type":""}],"src":"17852:366:4"},{"body":{"nodeType":"YulBlock","src":"18395:248:4","statements":[{"nodeType":"YulAssignment","src":"18405:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18417:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"18428:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18413:3:4"},"nodeType":"YulFunctionCall","src":"18413:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18405:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18452:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"18463:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18448:3:4"},"nodeType":"YulFunctionCall","src":"18448:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18471:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"18477:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18467:3:4"},"nodeType":"YulFunctionCall","src":"18467:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18441:6:4"},"nodeType":"YulFunctionCall","src":"18441:47:4"},"nodeType":"YulExpressionStatement","src":"18441:47:4"},{"nodeType":"YulAssignment","src":"18497:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18631:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18505:124:4"},"nodeType":"YulFunctionCall","src":"18505:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18497:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18375:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18390:4:4","type":""}],"src":"18224:419:4"},{"body":{"nodeType":"YulBlock","src":"18803:288:4","statements":[{"nodeType":"YulAssignment","src":"18813:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18825:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"18836:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18821:3:4"},"nodeType":"YulFunctionCall","src":"18821:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18813:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18893:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18906:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"18917:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18902:3:4"},"nodeType":"YulFunctionCall","src":"18902:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18849:43:4"},"nodeType":"YulFunctionCall","src":"18849:71:4"},"nodeType":"YulExpressionStatement","src":"18849:71:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18974:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18987:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"18998:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18983:3:4"},"nodeType":"YulFunctionCall","src":"18983:18:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18930:43:4"},"nodeType":"YulFunctionCall","src":"18930:72:4"},"nodeType":"YulExpressionStatement","src":"18930:72:4"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19056:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19069:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"19080:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19065:3:4"},"nodeType":"YulFunctionCall","src":"19065:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19012:43:4"},"nodeType":"YulFunctionCall","src":"19012:72:4"},"nodeType":"YulExpressionStatement","src":"19012:72:4"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18759:9:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18771:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18779:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18787:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18798:4:4","type":""}],"src":"18649:442:4"},{"body":{"nodeType":"YulBlock","src":"19160:80:4","statements":[{"nodeType":"YulAssignment","src":"19170:22:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19185:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19179:5:4"},"nodeType":"YulFunctionCall","src":"19179:13:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19170:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19228:5:4"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"19201:26:4"},"nodeType":"YulFunctionCall","src":"19201:33:4"},"nodeType":"YulExpressionStatement","src":"19201:33:4"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19138:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"19146:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19154:5:4","type":""}],"src":"19097:143:4"},{"body":{"nodeType":"YulBlock","src":"19323:274:4","statements":[{"body":{"nodeType":"YulBlock","src":"19369:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19371:77:4"},"nodeType":"YulFunctionCall","src":"19371:79:4"},"nodeType":"YulExpressionStatement","src":"19371:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19344:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"19353:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19340:3:4"},"nodeType":"YulFunctionCall","src":"19340:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"19365:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19336:3:4"},"nodeType":"YulFunctionCall","src":"19336:32:4"},"nodeType":"YulIf","src":"19333:119:4"},{"nodeType":"YulBlock","src":"19462:128:4","statements":[{"nodeType":"YulVariableDeclaration","src":"19477:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"19491:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19481:6:4","type":""}]},{"nodeType":"YulAssignment","src":"19506:74:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19552:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"19563:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19548:3:4"},"nodeType":"YulFunctionCall","src":"19548:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19572:7:4"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"19516:31:4"},"nodeType":"YulFunctionCall","src":"19516:64:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19506:6:4"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19293:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19304:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19316:6:4","type":""}],"src":"19246:351:4"},{"body":{"nodeType":"YulBlock","src":"19648:73:4","statements":[{"nodeType":"YulAssignment","src":"19658:57:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19673:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"19680:34:4","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19669:3:4"},"nodeType":"YulFunctionCall","src":"19669:46:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19658:7:4"}]}]},"name":"cleanup_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19630:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19640:7:4","type":""}],"src":"19603:118:4"},{"body":{"nodeType":"YulBlock","src":"19787:82:4","statements":[{"nodeType":"YulAssignment","src":"19797:66:4","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19855:5:4"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"19837:17:4"},"nodeType":"YulFunctionCall","src":"19837:24:4"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"19828:8:4"},"nodeType":"YulFunctionCall","src":"19828:34:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19810:17:4"},"nodeType":"YulFunctionCall","src":"19810:53:4"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19797:9:4"}]}]},"name":"convert_t_uint128_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19767:5:4","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19777:9:4","type":""}],"src":"19727:142:4"},{"body":{"nodeType":"YulBlock","src":"19940:66:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19957:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19993:5:4"}],"functionName":{"name":"convert_t_uint128_to_t_uint256","nodeType":"YulIdentifier","src":"19962:30:4"},"nodeType":"YulFunctionCall","src":"19962:37:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19950:6:4"},"nodeType":"YulFunctionCall","src":"19950:50:4"},"nodeType":"YulExpressionStatement","src":"19950:50:4"}]},"name":"abi_encode_t_uint128_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19928:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19935:3:4","type":""}],"src":"19875:131:4"},{"body":{"nodeType":"YulBlock","src":"20138:206:4","statements":[{"nodeType":"YulAssignment","src":"20148:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20160:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"20171:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20156:3:4"},"nodeType":"YulFunctionCall","src":"20156:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20148:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20228:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20241:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"20252:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20237:3:4"},"nodeType":"YulFunctionCall","src":"20237:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20184:43:4"},"nodeType":"YulFunctionCall","src":"20184:71:4"},"nodeType":"YulExpressionStatement","src":"20184:71:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20309:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20322:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"20333:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20318:3:4"},"nodeType":"YulFunctionCall","src":"20318:18:4"}],"functionName":{"name":"abi_encode_t_uint128_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20265:43:4"},"nodeType":"YulFunctionCall","src":"20265:72:4"},"nodeType":"YulExpressionStatement","src":"20265:72:4"}]},"name":"abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20102:9:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20114:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20122:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20133:4:4","type":""}],"src":"20012:332:4"},{"body":{"nodeType":"YulBlock","src":"20463:34:4","statements":[{"nodeType":"YulAssignment","src":"20473:18:4","value":{"name":"pos","nodeType":"YulIdentifier","src":"20488:3:4"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20473:11:4"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20435:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"20440:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20451:11:4","type":""}],"src":"20350:147:4"},{"body":{"nodeType":"YulBlock","src":"20554:103:4","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20577:3:4"},{"name":"src","nodeType":"YulIdentifier","src":"20582:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"20587:6:4"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"20564:12:4"},"nodeType":"YulFunctionCall","src":"20564:30:4"},"nodeType":"YulExpressionStatement","src":"20564:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20635:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"20640:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20631:3:4"},"nodeType":"YulFunctionCall","src":"20631:16:4"},{"kind":"number","nodeType":"YulLiteral","src":"20649:1:4","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20624:6:4"},"nodeType":"YulFunctionCall","src":"20624:27:4"},"nodeType":"YulExpressionStatement","src":"20624:27:4"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"20536:3:4","type":""},{"name":"dst","nodeType":"YulTypedName","src":"20541:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"20546:6:4","type":""}],"src":"20503:154:4"},{"body":{"nodeType":"YulBlock","src":"20803:196:4","statements":[{"nodeType":"YulAssignment","src":"20813:95:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20896:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"20901:6:4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20820:75:4"},"nodeType":"YulFunctionCall","src":"20820:88:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20813:3:4"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"20942:5:4"},{"name":"pos","nodeType":"YulIdentifier","src":"20949:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"20954:6:4"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"20918:23:4"},"nodeType":"YulFunctionCall","src":"20918:43:4"},"nodeType":"YulExpressionStatement","src":"20918:43:4"},{"nodeType":"YulAssignment","src":"20970:23:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20981:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"20986:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20977:3:4"},"nodeType":"YulFunctionCall","src":"20977:16:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20970:3:4"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"20776:5:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"20783:6:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20791:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20799:3:4","type":""}],"src":"20685:314:4"},{"body":{"nodeType":"YulBlock","src":"21149:147:4","statements":[{"nodeType":"YulAssignment","src":"21160:110:4","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21249:6:4"},{"name":"value1","nodeType":"YulIdentifier","src":"21257:6:4"},{"name":"pos","nodeType":"YulIdentifier","src":"21266:3:4"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21167:81:4"},"nodeType":"YulFunctionCall","src":"21167:103:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21160:3:4"}]},{"nodeType":"YulAssignment","src":"21280:10:4","value":{"name":"pos","nodeType":"YulIdentifier","src":"21287:3:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21280:3:4"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21120:3:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21126:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21134:6:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21145:3:4","type":""}],"src":"21005:291:4"},{"body":{"nodeType":"YulBlock","src":"21361:50:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21378:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21398:5:4"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"21383:14:4"},"nodeType":"YulFunctionCall","src":"21383:21:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21371:6:4"},"nodeType":"YulFunctionCall","src":"21371:34:4"},"nodeType":"YulExpressionStatement","src":"21371:34:4"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21349:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21356:3:4","type":""}],"src":"21302:109:4"},{"body":{"nodeType":"YulBlock","src":"21537:200:4","statements":[{"nodeType":"YulAssignment","src":"21547:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21559:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"21570:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21555:3:4"},"nodeType":"YulFunctionCall","src":"21555:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21547:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21621:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21634:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"21645:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21630:3:4"},"nodeType":"YulFunctionCall","src":"21630:17:4"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"21583:37:4"},"nodeType":"YulFunctionCall","src":"21583:65:4"},"nodeType":"YulExpressionStatement","src":"21583:65:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21702:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21715:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"21726:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21711:3:4"},"nodeType":"YulFunctionCall","src":"21711:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21658:43:4"},"nodeType":"YulFunctionCall","src":"21658:72:4"},"nodeType":"YulExpressionStatement","src":"21658:72:4"}]},"name":"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21501:9:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21513:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21521:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21532:4:4","type":""}],"src":"21417:320:4"},{"body":{"nodeType":"YulBlock","src":"21897:234:4","statements":[{"nodeType":"YulAssignment","src":"21907:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21919:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"21930:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21915:3:4"},"nodeType":"YulFunctionCall","src":"21915:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21907:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22001:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22014:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"22025:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22010:3:4"},"nodeType":"YulFunctionCall","src":"22010:17:4"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21943:57:4"},"nodeType":"YulFunctionCall","src":"21943:85:4"},"nodeType":"YulExpressionStatement","src":"21943:85:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22096:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22109:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"22120:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22105:3:4"},"nodeType":"YulFunctionCall","src":"22105:18:4"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22038:57:4"},"nodeType":"YulFunctionCall","src":"22038:86:4"},"nodeType":"YulExpressionStatement","src":"22038:86:4"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$190_t_contract$_IERC20_$190__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21861:9:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21873:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21881:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21892:4:4","type":""}],"src":"21743:388:4"},{"body":{"nodeType":"YulBlock","src":"22243:76:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22265:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"22273:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22261:3:4"},"nodeType":"YulFunctionCall","src":"22261:14:4"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"22277:34:4","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22254:6:4"},"nodeType":"YulFunctionCall","src":"22254:58:4"},"nodeType":"YulExpressionStatement","src":"22254:58:4"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22235:6:4","type":""}],"src":"22137:182:4"},{"body":{"nodeType":"YulBlock","src":"22471:220:4","statements":[{"nodeType":"YulAssignment","src":"22481:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22547:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"22552:2:4","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22488:58:4"},"nodeType":"YulFunctionCall","src":"22488:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22481:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22653:3:4"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"22564:88:4"},"nodeType":"YulFunctionCall","src":"22564:93:4"},"nodeType":"YulExpressionStatement","src":"22564:93:4"},{"nodeType":"YulAssignment","src":"22666:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22677:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"22682:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22673:3:4"},"nodeType":"YulFunctionCall","src":"22673:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22666:3:4"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22459:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22467:3:4","type":""}],"src":"22325:366:4"},{"body":{"nodeType":"YulBlock","src":"22868:248:4","statements":[{"nodeType":"YulAssignment","src":"22878:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22890:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"22901:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22886:3:4"},"nodeType":"YulFunctionCall","src":"22886:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22878:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22925:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"22936:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22921:3:4"},"nodeType":"YulFunctionCall","src":"22921:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22944:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"22950:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22940:3:4"},"nodeType":"YulFunctionCall","src":"22940:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22914:6:4"},"nodeType":"YulFunctionCall","src":"22914:47:4"},"nodeType":"YulExpressionStatement","src":"22914:47:4"},{"nodeType":"YulAssignment","src":"22970:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23104:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22978:124:4"},"nodeType":"YulFunctionCall","src":"22978:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22970:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22848:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22863:4:4","type":""}],"src":"22697:419:4"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // contract IERC20[]\n    function abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // address payable[]\n    function abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_payable_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value8, value9 := abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value10 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IWETH_$227_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IWETH_$227_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IWETH_$227_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IWETH_$227__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IWETH_$227_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_contract$_IERC20_$190(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$190(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$190(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$190(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$190(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$190(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$190(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function convert_t_contract$_IERC20_$190_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$190_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$190_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_uint128_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint128(value)))\n    }\n\n    function abi_encode_t_uint128_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint128_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$190_t_contract$_IERC20_$190__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":4,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"290":[{"length":32,"start":687},{"length":32,"start":3085}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F8 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x24E1C18D EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x6CA591A7 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x73FEE090 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x7A9D7C14 EQ PUSH2 0x125 JUMPI PUSH2 0x9C JUMP JUMPDEST CALLDATASIZE PUSH2 0x9C JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0xB85 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0xB97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0xC87 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP12 DUP12 SWAP1 POP GT ISZERO DUP1 ISZERO PUSH2 0x241 JUMPI POP DUP9 DUP9 SWAP1 POP DUP12 DUP12 SWAP1 POP EQ JUMPDEST DUP1 ISZERO PUSH2 0x252 JUMPI POP DUP9 DUP9 SWAP1 POP DUP8 DUP8 SWAP1 POP EQ JUMPDEST DUP1 ISZERO PUSH2 0x263 JUMPI POP DUP7 DUP7 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ JUMPDEST PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B42D6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x352 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x2 SLOAD CALLVALUE PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x1992 JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x396 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP3 SWAP2 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x0 JUMPDEST DUP9 DUP9 SWAP1 POP DUP2 LT ISZERO PUSH2 0xB0A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x67C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4C2 JUMPI PUSH2 0x4C1 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x531 JUMPI PUSH32 0xB74B0798EC89F7CF91B1446E01C1BB75B7D55C45B104EDFB364A46A074E2F56 DUP3 PUSH1 0x0 ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x50E JUMPI PUSH2 0x50D PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x524 SWAP3 SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x546 JUMPI PUSH2 0x545 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x677 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x1992 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5BA JUMPI PUSH2 0x5B9 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x63B DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x626 JUMPI PUSH2 0x625 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x636 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x6AA JUMPI PUSH2 0x6A9 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x88E JUMPI DUP11 DUP11 DUP3 DUP2 DUP2 LT PUSH2 0x6EE JUMPI PUSH2 0x6ED PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x72C JUMPI PUSH2 0x72B PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x81B JUMPI PUSH2 0x7A8 DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x773 JUMPI PUSH2 0x772 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x788 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x79B JUMPI PUSH2 0x79A PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xD5E JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7BB JUMPI PUSH2 0x7BA PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xAF7 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x82E JUMPI PUSH2 0x82D PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x847 SWAP2 SWAP1 PUSH2 0x1992 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x881 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x8DA JUMP JUMPDEST PUSH2 0x8D9 DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x8A4 JUMPI PUSH2 0x8A3 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8B9 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8CC JUMPI PUSH2 0x8CB PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xD5E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A9 DUP13 DUP13 DUP5 DUP2 DUP2 LT PUSH2 0x8F2 JUMPI PUSH2 0x8F1 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST DUP16 DUP16 DUP6 DUP2 DUP2 LT PUSH2 0x91A JUMPI PUSH2 0x919 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST DUP13 DUP13 DUP7 DUP2 DUP2 LT PUSH2 0x942 JUMPI PUSH2 0x941 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST DUP12 DUP12 DUP8 DUP2 DUP2 LT PUSH2 0x96A JUMPI PUSH2 0x969 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST DUP11 DUP11 DUP9 DUP2 DUP2 LT PUSH2 0x992 JUMPI PUSH2 0x991 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0xE57 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 DUP13 DUP5 DUP2 DUP2 LT PUSH2 0x9D9 JUMPI PUSH2 0x9D8 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA63 JUMPI DUP1 DUP4 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0xA94 DUP13 DUP13 DUP5 DUP2 DUP2 LT PUSH2 0xA79 JUMPI PUSH2 0xA78 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA8E SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST DUP3 PUSH2 0x11B4 JUMP JUMPDEST PUSH32 0x680F2E4F4032EBF1774E8CDBADDCB1B617A5A606411C8CA96257ADA338D3833C DUP13 DUP13 DUP5 DUP2 DUP2 LT PUSH2 0xAC8 JUMPI PUSH2 0xAC7 PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0xAEC SWAP3 SWAP2 SWAP1 PUSH2 0x1C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH2 0xB02 SWAP1 PUSH2 0x1C94 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x448 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0xB63 JUMPI PUSH2 0xB2A DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x11B4 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xB5A SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB79 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0xB83 PUSH1 0x0 PUSH2 0x12C4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB8D PUSH2 0x1246 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xB9F PUSH2 0x1246 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x5091CCFE22CA8F99D8F1F07C6AE3A61DAF990D74EF229D46898624FF3977238C PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC3D PUSH2 0x1246 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC8F PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF6 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD08 DUP2 PUSH2 0x12C4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDED SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD6D3EB25A413C05D8107FC49DEB2789BEF7F612582B2482804C0B0423B6638EE DUP4 PUSH1 0x40 MLOAD PUSH2 0xE4B SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFA SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF4A SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF97 SWAP3 SWAP2 SWAP1 PUSH2 0x1E9C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFE9 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1015 SWAP3 SWAP2 SWAP1 PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH32 0xB1BBDF0CBDD013D8D322184C42C16DAFE4B2B3B66C3D60F46874B6C78B9A87F6 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x108C SWAP3 SWAP2 SWAP1 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH2 0x10D8 JUMPI DUP9 DUP9 PUSH1 0x40 MLOAD PUSH32 0x7155081C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CF SWAP3 SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1112 SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x113E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1162 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0x116C SWAP2 SWAP1 PUSH2 0x1992 JUMP JUMPDEST SWAP2 POP PUSH32 0x74496FCE2CDC392D99808924E4161C005195A64FEE4C166B02C2B716DB28ABB0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x119D SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP3 POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EF SWAP3 SWAP2 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x121D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1241 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x124E PUSH2 0x1388 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x126C PUSH2 0xBE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B9 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A3 DUP2 PUSH2 0x1390 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x13FD JUMPI PUSH2 0x13FC PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x13DD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1436 JUMPI PUSH2 0x1435 PUSH2 0x13E2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1453 JUMPI PUSH2 0x1452 PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1470 JUMPI PUSH2 0x146F PUSH2 0x13DD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x148C JUMPI PUSH2 0x148B PUSH2 0x13E2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14A9 JUMPI PUSH2 0x14A8 PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14C6 JUMPI PUSH2 0x14C5 PUSH2 0x13DD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x13E2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14FF JUMPI PUSH2 0x14FE PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x151C JUMPI PUSH2 0x151B PUSH2 0x13DD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1538 JUMPI PUSH2 0x1537 PUSH2 0x13E2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1588 DUP3 PUSH2 0x153F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x1550 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BA PUSH2 0x13C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x15C6 DUP3 DUP3 PUSH2 0x157F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x1550 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1600 DUP2 PUSH2 0x1390 JUMP JUMPDEST DUP2 EQ PUSH2 0x160B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x161D DUP2 PUSH2 0x15F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1636 PUSH2 0x1631 DUP5 PUSH2 0x15CB JUMP JUMPDEST PUSH2 0x15B0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1659 JUMPI PUSH2 0x1658 PUSH2 0x13E2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1682 JUMPI DUP1 PUSH2 0x166E DUP9 DUP3 PUSH2 0x160E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x165B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16A1 JUMPI PUSH2 0x16A0 PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16B1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1623 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x16DF JUMPI PUSH2 0x16DE PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16FD JUMPI PUSH2 0x16FC PUSH2 0x13D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1709 DUP15 DUP3 DUP16 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP12 POP SWAP12 POP POP PUSH1 0x20 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x172C JUMPI PUSH2 0x172B PUSH2 0x13D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1738 DUP15 DUP3 DUP16 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP10 POP SWAP10 POP POP PUSH1 0x40 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x13D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1767 DUP15 DUP3 DUP16 ADD PUSH2 0x143D JUMP JUMPDEST SWAP8 POP SWAP8 POP POP PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x178A JUMPI PUSH2 0x1789 PUSH2 0x13D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1796 DUP15 DUP3 DUP16 ADD PUSH2 0x1493 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x80 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17B9 JUMPI PUSH2 0x17B8 PUSH2 0x13D3 JUMP JUMPDEST JUMPDEST PUSH2 0x17C5 DUP15 DUP3 DUP16 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E8 JUMPI PUSH2 0x17E7 PUSH2 0x13D3 JUMP JUMPDEST JUMPDEST PUSH2 0x17F4 DUP15 DUP3 DUP16 ADD PUSH2 0x168C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181D JUMPI PUSH2 0x181C PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182B DUP5 DUP3 DUP6 ADD PUSH2 0x160E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x185F DUP3 PUSH2 0x1834 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186F DUP2 PUSH2 0x1854 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x188A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B5 PUSH2 0x18B0 PUSH2 0x18AB DUP5 PUSH2 0x1834 JUMP JUMPDEST PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1834 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C7 DUP3 PUSH2 0x189A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D9 DUP3 PUSH2 0x18BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E9 DUP2 PUSH2 0x18CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1904 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1913 DUP2 PUSH2 0x1854 JUMP JUMPDEST DUP2 EQ PUSH2 0x191E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1930 DUP2 PUSH2 0x190A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194C JUMPI PUSH2 0x194B PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x195A DUP5 DUP3 DUP6 ADD PUSH2 0x1921 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x199D DUP3 PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A8 DUP4 PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x19BB JUMPI PUSH2 0x19BA PUSH2 0x1963 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19DB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x19E8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A04 DUP2 PUSH2 0x19EF JUMP JUMPDEST DUP2 EQ PUSH2 0x1A0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A21 DUP2 PUSH2 0x19FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3D JUMPI PUSH2 0x1A3C PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4B DUP5 DUP3 DUP6 ADD PUSH2 0x1A12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A98 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x1AA5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB7 DUP3 PUSH2 0x1854 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AC7 DUP2 PUSH2 0x1AAC JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE4 DUP2 PUSH2 0x1ABE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B00 JUMPI PUSH2 0x1AFF PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B0E DUP5 DUP3 DUP6 ADD PUSH2 0x1AD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B22 DUP3 PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2D DUP4 PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1B62 JUMPI PUSH2 0x1B61 PUSH2 0x1963 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B78 DUP3 PUSH2 0x1834 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B88 DUP2 PUSH2 0x1B6D JUMP JUMPDEST DUP2 EQ PUSH2 0x1B93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BA5 DUP2 PUSH2 0x1B7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC1 JUMPI PUSH2 0x1BC0 PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BCF DUP5 DUP3 DUP6 ADD PUSH2 0x1B96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1C04 JUMPI PUSH2 0x1C03 PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C26 JUMPI PUSH2 0x1C25 PUSH2 0x1BDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1C42 JUMPI PUSH2 0x1C41 PUSH2 0x1BE2 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C55 DUP3 PUSH2 0x18BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C65 DUP2 PUSH2 0x1C4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C80 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C5C JUMP JUMPDEST PUSH2 0x1C8D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C9F DUP3 PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1CD2 JUMPI PUSH2 0x1CD1 PUSH2 0x1963 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D02 PUSH2 0x1CFD PUSH2 0x1CF8 DUP5 PUSH2 0x1CDD JUMP JUMPDEST PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D12 DUP2 PUSH2 0x1CE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D2D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA0 PUSH1 0x26 DUP4 PUSH2 0x1D33 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAB DUP3 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DCF DUP2 PUSH2 0x1D93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DEB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x1DF8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x1E05 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E1C DUP2 PUSH2 0x15F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E38 JUMPI PUSH2 0x1E37 PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E46 DUP5 DUP3 DUP6 ADD PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E86 PUSH2 0x1E81 PUSH2 0x1E7C DUP5 PUSH2 0x1E4F JUMP JUMPDEST PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E96 DUP2 PUSH2 0x1E6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EB1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x1EBE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E8D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EEB DUP4 DUP6 PUSH2 0x1EC5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EF8 DUP4 DUP6 DUP5 PUSH2 0x1ED0 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F11 DUP3 DUP5 DUP7 PUSH2 0x1EDF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1F26 DUP2 PUSH2 0x19EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F41 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x1F4E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F6A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C5C JUMP JUMPDEST PUSH2 0x1F77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C5C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB4 PUSH1 0x20 DUP4 PUSH2 0x1D33 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBF DUP3 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FE3 DUP2 PUSH2 0x1FA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xFDE97A854EB9ED26FA80CC8AF77468A8F1F33CD2EC7DF49D 0xD DIFFICULTY RETURNDATASIZE PUSH3 0x1A4690 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"285:7454:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4848:2889;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;2281:74:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2361:155;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1186:27:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1286:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2719:109;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1250:30:3;;;;:::o;4848:2889::-;5166:15;;5146:9;;:16;;:35;;:90;;;;;5221:8;;:15;;5201:9;;:16;;:35;5146:90;:143;;;;;5274:8;;:15;;5256:7;;:14;;:33;5146:143;:198;;;;;5330:7;;:14;;5309:10;;:17;;:35;5146:198;5128:262;;5366:24;;;;;;;;;;;;;;5128:262;5401:24;5427:16;;;;;;;;5436:1;5427:16;;;;5438:4;5427:16;;;;;5401:42;;5470:1;5458:9;:13;5454:244;;;5487:8;:13;;;:21;;;5516:9;5487:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5575:3;;5565:9;:13;;;;:::i;:::-;5542:8;:20;;:36;;;;;5592:8;:13;;;:22;;;5615:7;:5;:7::i;:::-;5624:3;;5592:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5647:40;5666:8;:20;;;5647:40;;;;;;:::i;:::-;;;;;;;;5454:244;5713:9;5708:1869;5732:7;;:14;;5728:1;:18;5708:1869;;;5840:1;5818:24;;:7;;5826:1;5818:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:24;;;5814:536;;;5889:6;5896:1;5889:9;;;;;;;;:::i;:::-;;;;;;;;5866:8;:20;;;:32;5862:154;;;5927:43;5938:8;:20;;;5960:6;5967:1;5960:9;;;;;;;;:::i;:::-;;;;;;;;5927:43;;;;;;;:::i;:::-;;;;;;;;5992:5;;5862:154;6049:1;6037:6;6044:1;6037:9;;;;;;;;:::i;:::-;;;;;;;;:13;6033:277;;;6098:6;6105:1;6098:9;;;;;;;;:::i;:::-;;;;;;;;6074:8;:20;;:33;;;;;;;:::i;:::-;;;;;;;;6129:8;:13;;;:22;;;6152:6;6159:1;6152:9;;;;;;;;:::i;:::-;;;;;;;;6129:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6184:40;6196:6;6203:1;6196:9;;;;;;;;:::i;:::-;;;;;;;;6207:16;:14;:16::i;:::-;6184:11;:40::i;:::-;6251;6270:8;:20;;;6251:40;;;;;;:::i;:::-;;;;;;;;6033:277;6327:8;;5814:536;6471:8;:13;;;6455:29;;:9;;6465:1;6455:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:29;;;6451:520;;;6524:8;;6533:1;6524:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6508:27;;:9;;6518:1;6508:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:27;;;6504:263;;;6559:37;6572:9;;6582:1;6572:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6586:6;6593:1;6586:9;;;;;;;;:::i;:::-;;;;;;;;6559:12;:37::i;:::-;6642:6;6649:1;6642:9;;;;;;;;:::i;:::-;;;;;;;;6618:8;:20;;:33;;;;;;;:::i;:::-;;;;;;;;6678:40;6697:8;:20;;;6678:40;;;;;;:::i;:::-;;;;;;;;6740:8;;6504:263;6808:6;6815:1;6808:9;;;;;;;;:::i;:::-;;;;;;;;6784:8;:20;;:33;;;;;;;:::i;:::-;;;;;;;;6840:40;6859:8;:20;;;6840:40;;;;;;:::i;:::-;;;;;;;;6451:520;;;6919:37;6932:9;;6942:1;6932:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6946:6;6953:1;6946:9;;;;;;;;:::i;:::-;;;;;;;;6919:12;:37::i;:::-;6451:520;7046:20;7069:174;7096:8;;7105:1;7096:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7125:9;;7135:1;7125:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7155:7;;7163:1;7155:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7183;;7194:1;7183:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7214:12;;7227:1;7214:15;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;7069:9;:174::i;:::-;7046:197;;7277:8;:13;;;7262:28;;:8;;7271:1;7262:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:28;;;7258:309;;;7334:12;7310:8;:20;;:36;;;;;;;:::i;:::-;;;;;;;;7369:40;7388:8;:20;;;7369:40;;;;;;:::i;:::-;;;;;;;;7258:309;;;7448:40;7462:8;;7471:1;7462:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7475:12;7448:13;:40::i;:::-;7511:41;7526:8;;7535:1;7526:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7539:12;7511:41;;;;;;;:::i;:::-;;;;;;;;7258:309;5753:1824;5708:1869;5748:3;;;;;:::i;:::-;;;;5708:1869;;;;7613:1;7590:8;:20;;;:24;7586:145;;;7630:50;7644:8;:13;;;7659:8;:20;;;7630:13;:50::i;:::-;7699:21;7718:1;7699:21;;;;;;:::i;:::-;;;;;;;;7586:145;5118:2619;4848:2889;;;;;;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2281:74:3:-;1094:13:0;:11;:13::i;:::-;2345:3:3::1;2339;:9;;;;2281:74:::0;:::o;2361:155::-;1094:13:0;:11;:13::i;:::-;2453:3:3::1;2435:15;:21;;;;2471:38;2493:15;;2471:38;;;;;;:::i;:::-;;;;;;;;2361:155:::0;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1186:27:3:-;;;:::o;1286:18::-;;;;:::o;2719:109::-;1094:13:0;:11;:13::i;:::-;2793:10:3::1;2785:28;;:36;2814:6;2785:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2719:109:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;3214:129:3:-;3263:7;3326:10;3319:17;;3214:129;:::o;3415:117::-;3498:9;3490:27;;:35;3518:6;3490:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3415:117;;:::o;1710:565::-;2143:9;:22;;;2166:10;2186:4;2193:6;2143:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2254:4;2215:53;;2234:10;2215:53;;;2261:6;2215:53;;;;;;:::i;:::-;;;;;;;;1710:565;;:::o;3615:1044::-;4023:7;4064:1;4045:21;;:7;:21;;;4042:49;;;4075:16;;;;;;;;;;;;;;4042:49;4182:20;4205:8;:18;;;4232:4;4205:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4182:56;;4248:9;:17;;;4266:7;4275:17;4248:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4304:12;4322:10;:15;;4345:1;4348:12;;4322:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4303:58;;;4376:39;4393:7;4402:12;4376:39;;;;;;;:::i;:::-;;;;;;;;4429:7;4425:82;;4477:8;4496:9;4445:62;;;;;;;;;;;;:::i;:::-;;;;;;;;4425:82;4568:12;4532:8;:18;;;4559:4;4532:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;;:::i;:::-;4517:63;;4595:28;4610:12;4595:28;;;;;;:::i;:::-;;;;;;;;4640:12;4633:19;;;;3615:1044;;;;;;;;:::o;3050:113::-;3122:5;:14;;;3137:10;3149:6;3122:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3050:113;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7:77:4:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:117;878:1;875;868:12;892:117;1001:1;998;991:12;1015:117;1124:1;1121;1114:12;1163:582;1250:8;1260:6;1310:3;1303:4;1295:6;1291:17;1287:27;1277:122;;1318:79;;:::i;:::-;1277:122;1431:6;1418:20;1408:30;;1461:18;1453:6;1450:30;1447:117;;;1483:79;;:::i;:::-;1447:117;1597:4;1589:6;1585:17;1573:29;;1651:3;1643:4;1635:6;1631:17;1621:8;1617:32;1614:41;1611:128;;;1658:79;;:::i;:::-;1611:128;1163:582;;;;;:::o;1768:568::-;1841:8;1851:6;1901:3;1894:4;1886:6;1882:17;1878:27;1868:122;;1909:79;;:::i;:::-;1868:122;2022:6;2009:20;1999:30;;2052:18;2044:6;2041:30;2038:117;;;2074:79;;:::i;:::-;2038:117;2188:4;2180:6;2176:17;2164:29;;2242:3;2234:4;2226:6;2222:17;2212:8;2208:32;2205:41;2202:128;;;2249:79;;:::i;:::-;2202:128;1768:568;;;;;:::o;2367:576::-;2448:8;2458:6;2508:3;2501:4;2493:6;2489:17;2485:27;2475:122;;2516:79;;:::i;:::-;2475:122;2629:6;2616:20;2606:30;;2659:18;2651:6;2648:30;2645:117;;;2681:79;;:::i;:::-;2645:117;2795:4;2787:6;2783:17;2771:29;;2849:3;2841:4;2833:6;2829:17;2819:8;2815:32;2812:41;2809:128;;;2856:79;;:::i;:::-;2809:128;2367:576;;;;;:::o;2964:579::-;3048:8;3058:6;3108:3;3101:4;3093:6;3089:17;3085:27;3075:122;;3116:79;;:::i;:::-;3075:122;3229:6;3216:20;3206:30;;3259:18;3251:6;3248:30;3245:117;;;3281:79;;:::i;:::-;3245:117;3395:4;3387:6;3383:17;3371:29;;3449:3;3441:4;3433:6;3429:17;3419:8;3415:32;3412:41;3409:128;;;3456:79;;:::i;:::-;3409:128;2964:579;;;;;:::o;3549:102::-;3590:6;3641:2;3637:7;3632:2;3625:5;3621:14;3617:28;3607:38;;3549:102;;;:::o;3657:180::-;3705:77;3702:1;3695:88;3802:4;3799:1;3792:15;3826:4;3823:1;3816:15;3843:281;3926:27;3948:4;3926:27;:::i;:::-;3918:6;3914:40;4056:6;4044:10;4041:22;4020:18;4008:10;4005:34;4002:62;3999:88;;;4067:18;;:::i;:::-;3999:88;4107:10;4103:2;4096:22;3886:238;3843:281;;:::o;4130:129::-;4164:6;4191:20;;:::i;:::-;4181:30;;4220:33;4248:4;4240:6;4220:33;:::i;:::-;4130:129;;;:::o;4265:311::-;4342:4;4432:18;4424:6;4421:30;4418:56;;;4454:18;;:::i;:::-;4418:56;4504:4;4496:6;4492:17;4484:25;;4564:4;4558;4554:15;4546:23;;4265:311;;;:::o;4582:122::-;4655:24;4673:5;4655:24;:::i;:::-;4648:5;4645:35;4635:63;;4694:1;4691;4684:12;4635:63;4582:122;:::o;4710:139::-;4756:5;4794:6;4781:20;4772:29;;4810:33;4837:5;4810:33;:::i;:::-;4710:139;;;;:::o;4872:710::-;4968:5;4993:81;5009:64;5066:6;5009:64;:::i;:::-;4993:81;:::i;:::-;4984:90;;5094:5;5123:6;5116:5;5109:21;5157:4;5150:5;5146:16;5139:23;;5210:4;5202:6;5198:17;5190:6;5186:30;5239:3;5231:6;5228:15;5225:122;;;5258:79;;:::i;:::-;5225:122;5373:6;5356:220;5390:6;5385:3;5382:15;5356:220;;;5465:3;5494:37;5527:3;5515:10;5494:37;:::i;:::-;5489:3;5482:50;5561:4;5556:3;5552:14;5545:21;;5432:144;5416:4;5411:3;5407:14;5400:21;;5356:220;;;5360:21;4974:608;;4872:710;;;;;:::o;5605:370::-;5676:5;5725:3;5718:4;5710:6;5706:17;5702:27;5692:122;;5733:79;;:::i;:::-;5692:122;5850:6;5837:20;5875:94;5965:3;5957:6;5950:4;5942:6;5938:17;5875:94;:::i;:::-;5866:103;;5682:293;5605:370;;;;:::o;5981:2513::-;6292:6;6300;6308;6316;6324;6332;6340;6348;6356;6364;6372:7;6422:3;6410:9;6401:7;6397:23;6393:33;6390:120;;;6429:79;;:::i;:::-;6390:120;6577:1;6566:9;6562:17;6549:31;6607:18;6599:6;6596:30;6593:117;;;6629:79;;:::i;:::-;6593:117;6742:94;6828:7;6819:6;6808:9;6804:22;6742:94;:::i;:::-;6724:112;;;;6520:326;6913:2;6902:9;6898:18;6885:32;6944:18;6936:6;6933:30;6930:117;;;6966:79;;:::i;:::-;6930:117;7079:94;7165:7;7156:6;7145:9;7141:22;7079:94;:::i;:::-;7061:112;;;;6856:327;7250:2;7239:9;7235:18;7222:32;7281:18;7273:6;7270:30;7267:117;;;7303:79;;:::i;:::-;7267:117;7416:80;7488:7;7479:6;7468:9;7464:22;7416:80;:::i;:::-;7398:98;;;;7193:313;7573:2;7562:9;7558:18;7545:32;7604:18;7596:6;7593:30;7590:117;;;7626:79;;:::i;:::-;7590:117;7739:88;7819:7;7810:6;7799:9;7795:22;7739:88;:::i;:::-;7721:106;;;;7516:321;7904:3;7893:9;7889:19;7876:33;7936:18;7928:6;7925:30;7922:117;;;7958:79;;:::i;:::-;7922:117;8071:91;8154:7;8145:6;8134:9;8130:22;8071:91;:::i;:::-;8053:109;;;;7847:325;8239:3;8228:9;8224:19;8211:33;8271:18;8263:6;8260:30;8257:117;;;8293:79;;:::i;:::-;8257:117;8399:78;8469:7;8460:6;8449:9;8445:22;8399:78;:::i;:::-;8388:89;;8182:305;5981:2513;;;;;;;;;;;;;;:::o;8500:329::-;8559:6;8608:2;8596:9;8587:7;8583:23;8579:32;8576:119;;;8614:79;;:::i;:::-;8576:119;8734:1;8759:53;8804:7;8795:6;8784:9;8780:22;8759:53;:::i;:::-;8749:63;;8705:117;8500:329;;;;:::o;8835:126::-;8872:7;8912:42;8905:5;8901:54;8890:65;;8835:126;;;:::o;8967:96::-;9004:7;9033:24;9051:5;9033:24;:::i;:::-;9022:35;;8967:96;;;:::o;9069:118::-;9156:24;9174:5;9156:24;:::i;:::-;9151:3;9144:37;9069:118;;:::o;9193:222::-;9286:4;9324:2;9313:9;9309:18;9301:26;;9337:71;9405:1;9394:9;9390:17;9381:6;9337:71;:::i;:::-;9193:222;;;;:::o;9421:60::-;9449:3;9470:5;9463:12;;9421:60;;;:::o;9487:142::-;9537:9;9570:53;9588:34;9597:24;9615:5;9597:24;:::i;:::-;9588:34;:::i;:::-;9570:53;:::i;:::-;9557:66;;9487:142;;;:::o;9635:126::-;9685:9;9718:37;9749:5;9718:37;:::i;:::-;9705:50;;9635:126;;;:::o;9767:139::-;9830:9;9863:37;9894:5;9863:37;:::i;:::-;9850:50;;9767:139;;;:::o;9912:157::-;10012:50;10056:5;10012:50;:::i;:::-;10007:3;10000:63;9912:157;;:::o;10075:248::-;10181:4;10219:2;10208:9;10204:18;10196:26;;10232:84;10313:1;10302:9;10298:17;10289:6;10232:84;:::i;:::-;10075:248;;;;:::o;10329:122::-;10402:24;10420:5;10402:24;:::i;:::-;10395:5;10392:35;10382:63;;10441:1;10438;10431:12;10382:63;10329:122;:::o;10457:139::-;10503:5;10541:6;10528:20;10519:29;;10557:33;10584:5;10557:33;:::i;:::-;10457:139;;;;:::o;10602:329::-;10661:6;10710:2;10698:9;10689:7;10685:23;10681:32;10678:119;;;10716:79;;:::i;:::-;10678:119;10836:1;10861:53;10906:7;10897:6;10886:9;10882:22;10861:53;:::i;:::-;10851:63;;10807:117;10602:329;;;;:::o;10937:180::-;10985:77;10982:1;10975:88;11082:4;11079:1;11072:15;11106:4;11103:1;11096:15;11123:191;11163:4;11183:20;11201:1;11183:20;:::i;:::-;11178:25;;11217:20;11235:1;11217:20;:::i;:::-;11212:25;;11256:1;11253;11250:8;11247:34;;;11261:18;;:::i;:::-;11247:34;11306:1;11303;11299:9;11291:17;;11123:191;;;;:::o;11320:332::-;11441:4;11479:2;11468:9;11464:18;11456:26;;11492:71;11560:1;11549:9;11545:17;11536:6;11492:71;:::i;:::-;11573:72;11641:2;11630:9;11626:18;11617:6;11573:72;:::i;:::-;11320:332;;;;;:::o;11658:90::-;11692:7;11735:5;11728:13;11721:21;11710:32;;11658:90;;;:::o;11754:116::-;11824:21;11839:5;11824:21;:::i;:::-;11817:5;11814:32;11804:60;;11860:1;11857;11850:12;11804:60;11754:116;:::o;11876:137::-;11930:5;11961:6;11955:13;11946:22;;11977:30;12001:5;11977:30;:::i;:::-;11876:137;;;;:::o;12019:345::-;12086:6;12135:2;12123:9;12114:7;12110:23;12106:32;12103:119;;;12141:79;;:::i;:::-;12103:119;12261:1;12286:61;12339:7;12330:6;12319:9;12315:22;12286:61;:::i;:::-;12276:71;;12232:125;12019:345;;;;:::o;12370:180::-;12418:77;12415:1;12408:88;12515:4;12512:1;12505:15;12539:4;12536:1;12529:15;12556:332;12677:4;12715:2;12704:9;12700:18;12692:26;;12728:71;12796:1;12785:9;12781:17;12772:6;12728:71;:::i;:::-;12809:72;12877:2;12866:9;12862:18;12853:6;12809:72;:::i;:::-;12556:332;;;;;:::o;12894:110::-;12945:7;12974:24;12992:5;12974:24;:::i;:::-;12963:35;;12894:110;;;:::o;13010:150::-;13097:38;13129:5;13097:38;:::i;:::-;13090:5;13087:49;13077:77;;13150:1;13147;13140:12;13077:77;13010:150;:::o;13166:167::-;13226:5;13264:6;13251:20;13242:29;;13280:47;13321:5;13280:47;:::i;:::-;13166:167;;;;:::o;13339:357::-;13412:6;13461:2;13449:9;13440:7;13436:23;13432:32;13429:119;;;13467:79;;:::i;:::-;13429:119;13587:1;13612:67;13671:7;13662:6;13651:9;13647:22;13612:67;:::i;:::-;13602:77;;13558:131;13339:357;;;;:::o;13702:305::-;13742:3;13761:20;13779:1;13761:20;:::i;:::-;13756:25;;13795:20;13813:1;13795:20;:::i;:::-;13790:25;;13949:1;13881:66;13877:74;13874:1;13871:81;13868:107;;;13955:18;;:::i;:::-;13868:107;13999:1;13996;13992:9;13985:16;;13702:305;;;;:::o;14013:104::-;14058:7;14087:24;14105:5;14087:24;:::i;:::-;14076:35;;14013:104;;;:::o;14123:138::-;14204:32;14230:5;14204:32;:::i;:::-;14197:5;14194:43;14184:71;;14251:1;14248;14241:12;14184:71;14123:138;:::o;14267:155::-;14321:5;14359:6;14346:20;14337:29;;14375:41;14410:5;14375:41;:::i;:::-;14267:155;;;;:::o;14428:345::-;14495:6;14544:2;14532:9;14523:7;14519:23;14515:32;14512:119;;;14550:79;;:::i;:::-;14512:119;14670:1;14695:61;14748:7;14739:6;14728:9;14724:22;14695:61;:::i;:::-;14685:71;;14641:125;14428:345;;;;:::o;14779:117::-;14888:1;14885;14878:12;14902:117;15011:1;15008;15001:12;15025:117;15134:1;15131;15124:12;15148:724;15225:4;15231:6;15287:11;15274:25;15387:1;15381:4;15377:12;15366:8;15350:14;15346:29;15342:48;15322:18;15318:73;15308:168;;15395:79;;:::i;:::-;15308:168;15507:18;15497:8;15493:33;15485:41;;15559:4;15546:18;15536:28;;15587:18;15579:6;15576:30;15573:117;;;15609:79;;:::i;:::-;15573:117;15717:2;15711:4;15707:13;15699:21;;15774:4;15766:6;15762:17;15746:14;15742:38;15736:4;15732:49;15729:136;;;15784:79;;:::i;:::-;15729:136;15238:634;15148:724;;;;;:::o;15878:140::-;15942:9;15975:37;16006:5;15975:37;:::i;:::-;15962:50;;15878:140;;;:::o;16024:159::-;16125:51;16170:5;16125:51;:::i;:::-;16120:3;16113:64;16024:159;;:::o;16189:360::-;16324:4;16362:2;16351:9;16347:18;16339:26;;16375:85;16457:1;16446:9;16442:17;16433:6;16375:85;:::i;:::-;16470:72;16538:2;16527:9;16523:18;16514:6;16470:72;:::i;:::-;16189:360;;;;;:::o;16555:233::-;16594:3;16617:24;16635:5;16617:24;:::i;:::-;16608:33;;16663:66;16656:5;16653:77;16650:103;;;16733:18;;:::i;:::-;16650:103;16780:1;16773:5;16769:13;16762:20;;16555:233;;;:::o;16794:85::-;16839:7;16868:5;16857:16;;16794:85;;;:::o;16885:158::-;16943:9;16976:61;16994:42;17003:32;17029:5;17003:32;:::i;:::-;16994:42;:::i;:::-;16976:61;:::i;:::-;16963:74;;16885:158;;;:::o;17049:147::-;17144:45;17183:5;17144:45;:::i;:::-;17139:3;17132:58;17049:147;;:::o;17202:238::-;17303:4;17341:2;17330:9;17326:18;17318:26;;17354:79;17430:1;17419:9;17415:17;17406:6;17354:79;:::i;:::-;17202:238;;;;:::o;17446:169::-;17530:11;17564:6;17559:3;17552:19;17604:4;17599:3;17595:14;17580:29;;17446:169;;;;:::o;17621:225::-;17761:34;17757:1;17749:6;17745:14;17738:58;17830:8;17825:2;17817:6;17813:15;17806:33;17621:225;:::o;17852:366::-;17994:3;18015:67;18079:2;18074:3;18015:67;:::i;:::-;18008:74;;18091:93;18180:3;18091:93;:::i;:::-;18209:2;18204:3;18200:12;18193:19;;17852:366;;;:::o;18224:419::-;18390:4;18428:2;18417:9;18413:18;18405:26;;18477:9;18471:4;18467:20;18463:1;18452:9;18448:17;18441:47;18505:131;18631:4;18505:131;:::i;:::-;18497:139;;18224:419;;;:::o;18649:442::-;18798:4;18836:2;18825:9;18821:18;18813:26;;18849:71;18917:1;18906:9;18902:17;18893:6;18849:71;:::i;:::-;18930:72;18998:2;18987:9;18983:18;18974:6;18930:72;:::i;:::-;19012;19080:2;19069:9;19065:18;19056:6;19012:72;:::i;:::-;18649:442;;;;;;:::o;19097:143::-;19154:5;19185:6;19179:13;19170:22;;19201:33;19228:5;19201:33;:::i;:::-;19097:143;;;;:::o;19246:351::-;19316:6;19365:2;19353:9;19344:7;19340:23;19336:32;19333:119;;;19371:79;;:::i;:::-;19333:119;19491:1;19516:64;19572:7;19563:6;19552:9;19548:22;19516:64;:::i;:::-;19506:74;;19462:128;19246:351;;;;:::o;19603:118::-;19640:7;19680:34;19673:5;19669:46;19658:57;;19603:118;;;:::o;19727:142::-;19777:9;19810:53;19828:34;19837:24;19855:5;19837:24;:::i;:::-;19828:34;:::i;:::-;19810:53;:::i;:::-;19797:66;;19727:142;;;:::o;19875:131::-;19962:37;19993:5;19962:37;:::i;:::-;19957:3;19950:50;19875:131;;:::o;20012:332::-;20133:4;20171:2;20160:9;20156:18;20148:26;;20184:71;20252:1;20241:9;20237:17;20228:6;20184:71;:::i;:::-;20265:72;20333:2;20322:9;20318:18;20309:6;20265:72;:::i;:::-;20012:332;;;;;:::o;20350:147::-;20451:11;20488:3;20473:18;;20350:147;;;;:::o;20503:154::-;20587:6;20582:3;20577;20564:30;20649:1;20640:6;20635:3;20631:16;20624:27;20503:154;;;:::o;20685:314::-;20799:3;20820:88;20901:6;20896:3;20820:88;:::i;:::-;20813:95;;20918:43;20954:6;20949:3;20942:5;20918:43;:::i;:::-;20986:6;20981:3;20977:16;20970:23;;20685:314;;;;;:::o;21005:291::-;21145:3;21167:103;21266:3;21257:6;21249;21167:103;:::i;:::-;21160:110;;21287:3;21280:10;;21005:291;;;;;:::o;21302:109::-;21383:21;21398:5;21383:21;:::i;:::-;21378:3;21371:34;21302:109;;:::o;21417:320::-;21532:4;21570:2;21559:9;21555:18;21547:26;;21583:65;21645:1;21634:9;21630:17;21621:6;21583:65;:::i;:::-;21658:72;21726:2;21715:9;21711:18;21702:6;21658:72;:::i;:::-;21417:320;;;;;:::o;21743:388::-;21892:4;21930:2;21919:9;21915:18;21907:26;;21943:85;22025:1;22014:9;22010:17;22001:6;21943:85;:::i;:::-;22038:86;22120:2;22109:9;22105:18;22096:6;22038:86;:::i;:::-;21743:388;;;;;:::o;22137:182::-;22277:34;22273:1;22265:6;22261:14;22254:58;22137:182;:::o;22325:366::-;22467:3;22488:67;22552:2;22547:3;22488:67;:::i;:::-;22481:74;;22564:93;22653:3;22564:93;:::i;:::-;22682:2;22677:3;22673:12;22666:19;;22325:366;;;:::o;22697:419::-;22863:4;22901:2;22890:9;22886:18;22878:26;;22950:9;22944:4;22940:20;22936:1;22925:9;22921:17;22914:47;22978:131;23104:4;22978:131;:::i;:::-;22970:139;;22697:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1644800","executionCost":"infinite","totalCost":"infinite"},"external":{"":"196","WETH()":"infinite","fee()":"2473","maxTransactions()":"2430","multiSwap(address[],address[],address[],address[],bytes[],uint256[])":"infinite","owner()":"2522","renounceOwnership()":"30443","setMaxTransactionLimit(uint256)":"infinite","setfee(uint256)":"24851","transferOwnership(address)":"30835","withdrawETH(uint256)":"infinite"},"internal":{"depositToken(contract IERC20,uint256)":"infinite","fillQuote(contract IERC20,contract IERC20,address,address,bytes calldata)":"infinite","setDestination()":"22","transferEth(uint256,address)":"infinite","withdrawToken(contract IERC20,uint256)":"infinite"}},"methodIdentifiers":{"WETH()":"ad5c4648","fee()":"ddca3f43","maxTransactions()":"24e1c18d","multiSwap(address[],address[],address[],address[],bytes[],uint256[])":"6ca591a7","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setMaxTransactionLimit(uint256)":"7a9d7c14","setfee(uint256)":"73fee090","transferOwnership(address)":"f2fde38b","withdrawETH(uint256)":"f14210a6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"}],\"name\":\"FillQuote_Swap_Failed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid_Multiswap_Data\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wethBal_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reqAmount_\",\"type\":\"uint256\"}],\"name\":\"BadRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wethBal_\",\"type\":\"uint256\"}],\"name\":\"EtherBalanceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"TransferSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"boughtAmount_\",\"type\":\"uint256\"}],\"name\":\"WithdrawTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialBuyTokenBalance\",\"type\":\"uint256\"}],\"name\":\"ZeroXCallSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buTokenAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokenBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTransactions\",\"type\":\"uint256\"}],\"name\":\"maxTransactionsChange\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransactions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"sellToken\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"buyToken\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"spender\",\"type\":\"address[]\"},{\"internalType\":\"address payable[]\",\"name\":\"swapTarget\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"swapCallData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"multiSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setMaxTransactionLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setfee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"TransferSuccessful(address,address,uint256)\":{\"details\":\"Event to notify if transfer successful or failed after account approval verified\"}},\"kind\":\"dev\",\"methods\":{\"multiSwap(address[],address[],address[],address[],bytes[],uint256[])\":{\"params\":{\"amount\":\"numbers of token to transfer  in unit256 \",\"buyToken\":\"addresses of sell tokens\",\"sellToken\":\"addresses of sell tokens\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AlphaVault.sol\":\"AlphaVaultSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AlphaVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 wad) external;\\n}\\n\\ncontract AlphaVaultSwap is Ownable {\\n    // AlphaVault custom events\\n    event WithdrawTokens(IERC20 buyToken, uint256 boughtAmount_);\\n    event EtherBalanceChange(uint256 wethBal_);\\n    event BadRequest(uint256 wethBal_, uint256 reqAmount_);\\n    event ZeroXCallSuccess(bool status, uint256 initialBuyTokenBalance);\\n    event buyTokenBought(uint256 buTokenAmount);\\n    event maxTransactionsChange(uint256 maxTransactions);\\n\\n    /**\\n     * @dev Event to notify if transfer successful or failed\\n     * after account approval verified\\n     */\\n    event TransferSuccessful(\\n        address indexed from_,\\n        address indexed to_,\\n        uint256 amount_\\n    );\\n\\n    error InvalidAddress();\\n    error Invalid_Multiswap_Data();\\n    error FillQuote_Swap_Failed(IERC20 buyToken,IERC20 sellToken);\\n\\n\\n    struct wethInfo{\\n        uint256 eth_balance;\\n        IWETH wETH;\\n    }\\n    // The WETH contract.\\n    IWETH public immutable WETH;\\n    // IERC20 ERC20Interface;\\n\\n    uint256 public maxTransactions;\\n    uint256 public fee;\\n    // address private destination;\\n\\n    constructor() {\\n        WETH = IWETH(0x4200000000000000000000000000000000000006);\\n        maxTransactions = 25;\\n        fee = 5;\\n    }\\n\\n    /**\\n     * @dev method that handles transfer of ERC20 tokens to other address\\n     * it assumes the calling address has approved this contract\\n     * as spender\\n     * @param amount numbers of token to transfer\\n     */\\n    function depositToken(IERC20 sellToken, uint256 amount) private {\\n        // require(amount > 0);\\n        // ERC20Interface = IERC20(sellToken);\\n\\n        // if (amount > ERC20Interface.allowance(msg.sender, address(this))) {\\n        //     emit TransferFailed(msg.sender, address(this), amount);\\n        //     revert();\\n        // }\\n\\n        // bool success = ERC20Interface.transferFrom(msg.sender, address(this), amount);\\n        sellToken.transferFrom(msg.sender, address(this), amount);\\n        emit TransferSuccessful(msg.sender, address(this), amount);\\n    }\\n\\n    function setfee(uint256 num) external onlyOwner {\\n        fee = num;\\n    }\\n\\n    function setMaxTransactionLimit(uint256 num) external onlyOwner {\\n        maxTransactions = num;\\n        emit maxTransactionsChange(maxTransactions);\\n    }\\n\\n    // function withdrawFee(IERC20 token, uint256 amount) external onlyOwner{\\n    //     token.transfer(msg.sender, amount);\\n    // }\\n\\n    // Transfer ETH held by this contrat to the sender/owner.\\n    function withdrawETH(uint256 amount) external onlyOwner {\\n        payable(msg.sender).transfer(amount);\\n    }\\n\\n    // Payable fallback to allow this contract to receive protocol fee refunds.\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n\\n    // Transfer tokens held by this contrat to the sender/owner.\\n    function withdrawToken(IERC20 token, uint256 amount) internal {\\n        token.transfer(msg.sender, amount);\\n    }\\n\\n    //Sets destination address to msg.sender\\n    function setDestination() internal view returns (address) {\\n        // destination = msg.sender;\\n        return msg.sender;\\n    }\\n\\n    // Transfer amount of ETH held by this contrat to the sender.\\n    function transferEth(uint256 amount, address msgSender) internal {\\n        payable(msgSender).transfer(amount);\\n    }\\n\\n    // Swaps ERC20->ERC20 tokens held by this contract using a 0x-API quote.\\n    function fillQuote(\\n        // The `buyTokenAddress` field from the API response.\\n        IERC20 buyToken,\\n        IERC20 sellToken,\\n        // The `allowanceTarget` field from the API response.\\n        address spender,\\n        // The `to` field from the API response.\\n        address swapTarget,\\n        // The `data` field from the API response.\\n        bytes calldata swapCallData\\n    ) internal returns (uint256) {\\n        if(spender == address(0)) revert InvalidAddress();\\n        // Track our balance of the buyToken to determine how much we've bought.\\n        uint256 boughtAmount = buyToken.balanceOf(address(this));\\n        sellToken.approve(spender, type(uint128).max);\\n        (bool success, ) = swapTarget.call{value: 0}(swapCallData);\\n        emit ZeroXCallSuccess(success, boughtAmount);\\n        if(!success) revert FillQuote_Swap_Failed({buyToken:buyToken,sellToken:sellToken});\\n        boughtAmount = buyToken.balanceOf(address(this)) - boughtAmount;\\n        emit buyTokenBought(boughtAmount);\\n        return boughtAmount;\\n    }\\n\\n    /**\\n     * @param sellToken addresses of sell tokens\\n     * @param buyToken addresses of sell tokens\\n     * @param amount numbers of token to transfer  in unit256\\n     * \\n     */\\n    function multiSwap(\\n        IERC20[] calldata sellToken,\\n        IERC20[] calldata buyToken,\\n        address[] calldata spender,\\n        address payable[] calldata swapTarget,\\n        bytes[] calldata swapCallData,\\n        uint256[] memory amount\\n    ) external payable {\\n        if(!(\\n            sellToken.length <= maxTransactions &&\\n                sellToken.length == buyToken.length &&\\n                spender.length == buyToken.length &&\\n                swapTarget.length == spender.length))\\n            revert Invalid_Multiswap_Data();\\n\\n        wethInfo memory WethInfo= wethInfo(0,WETH);\\n\\n        if (msg.value > 0) {\\n            WethInfo.wETH.deposit{value: msg.value}();\\n            WethInfo.eth_balance = msg.value-fee;\\n            WethInfo.wETH.transfer(owner(), fee);\\n            emit EtherBalanceChange(WethInfo.eth_balance);\\n        }\\n\\n        for (uint256 i = 0; i < spender.length; i++) {\\n            // ETHER & WETH Withdrawl request.\\n            if (spender[i] == address(0)) {\\n                if (WethInfo.eth_balance < amount[i]) {\\n                    emit BadRequest(WethInfo.eth_balance, amount[i]);\\n                    break;\\n                }\\n                if (amount[i] > 0) {\\n                    WethInfo.eth_balance -= amount[i];\\n                    WethInfo.wETH.withdraw(amount[i]);\\n                    transferEth(amount[i], setDestination());\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                }\\n                continue;\\n            }\\n            // Condition For using Deposited Ether before using WETH From user balance.\\n            if (sellToken[i] == WethInfo.wETH) {\\n                if (sellToken[i] == buyToken[i]) {\\n                    depositToken(sellToken[i], amount[i]);\\n                    WethInfo.eth_balance += amount[i];\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                    continue;\\n                }\\n                WethInfo.eth_balance -= amount[i];\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                depositToken(sellToken[i], amount[i]);\\n            }\\n\\n            // Variable to store amount of tokens purchased.\\n            uint256 boughtAmount = fillQuote(\\n                buyToken[i],\\n                sellToken[i],\\n                spender[i],\\n                swapTarget[i],\\n                swapCallData[i]\\n            );\\n\\n            if (buyToken[i] == WethInfo.wETH) {\\n                WethInfo.eth_balance += boughtAmount;\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                withdrawToken(buyToken[i], boughtAmount);\\n                emit WithdrawTokens(buyToken[i], boughtAmount);\\n            }\\n        }\\n        if (WethInfo.eth_balance > 0) {\\n            withdrawToken(WethInfo.wETH, WethInfo.eth_balance);\\n            emit EtherBalanceChange(0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa910e1385971bb5a92b2dffa4e67e0094a9c3596f111208c5431d433686ee3f2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/AlphaVault.sol:AlphaVaultSwap","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":292,"contract":"contracts/AlphaVault.sol:AlphaVaultSwap","label":"maxTransactions","offset":0,"slot":"1","type":"t_uint256"},{"astId":294,"contract":"contracts/AlphaVault.sol:AlphaVaultSwap","label":"fee","offset":0,"slot":"2","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"IWETH":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AlphaVault.sol\":\"IWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AlphaVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 wad) external;\\n}\\n\\ncontract AlphaVaultSwap is Ownable {\\n    // AlphaVault custom events\\n    event WithdrawTokens(IERC20 buyToken, uint256 boughtAmount_);\\n    event EtherBalanceChange(uint256 wethBal_);\\n    event BadRequest(uint256 wethBal_, uint256 reqAmount_);\\n    event ZeroXCallSuccess(bool status, uint256 initialBuyTokenBalance);\\n    event buyTokenBought(uint256 buTokenAmount);\\n    event maxTransactionsChange(uint256 maxTransactions);\\n\\n    /**\\n     * @dev Event to notify if transfer successful or failed\\n     * after account approval verified\\n     */\\n    event TransferSuccessful(\\n        address indexed from_,\\n        address indexed to_,\\n        uint256 amount_\\n    );\\n\\n    error InvalidAddress();\\n    error Invalid_Multiswap_Data();\\n    error FillQuote_Swap_Failed(IERC20 buyToken,IERC20 sellToken);\\n\\n\\n    struct wethInfo{\\n        uint256 eth_balance;\\n        IWETH wETH;\\n    }\\n    // The WETH contract.\\n    IWETH public immutable WETH;\\n    // IERC20 ERC20Interface;\\n\\n    uint256 public maxTransactions;\\n    uint256 public fee;\\n    // address private destination;\\n\\n    constructor() {\\n        WETH = IWETH(0x4200000000000000000000000000000000000006);\\n        maxTransactions = 25;\\n        fee = 5;\\n    }\\n\\n    /**\\n     * @dev method that handles transfer of ERC20 tokens to other address\\n     * it assumes the calling address has approved this contract\\n     * as spender\\n     * @param amount numbers of token to transfer\\n     */\\n    function depositToken(IERC20 sellToken, uint256 amount) private {\\n        // require(amount > 0);\\n        // ERC20Interface = IERC20(sellToken);\\n\\n        // if (amount > ERC20Interface.allowance(msg.sender, address(this))) {\\n        //     emit TransferFailed(msg.sender, address(this), amount);\\n        //     revert();\\n        // }\\n\\n        // bool success = ERC20Interface.transferFrom(msg.sender, address(this), amount);\\n        sellToken.transferFrom(msg.sender, address(this), amount);\\n        emit TransferSuccessful(msg.sender, address(this), amount);\\n    }\\n\\n    function setfee(uint256 num) external onlyOwner {\\n        fee = num;\\n    }\\n\\n    function setMaxTransactionLimit(uint256 num) external onlyOwner {\\n        maxTransactions = num;\\n        emit maxTransactionsChange(maxTransactions);\\n    }\\n\\n    // function withdrawFee(IERC20 token, uint256 amount) external onlyOwner{\\n    //     token.transfer(msg.sender, amount);\\n    // }\\n\\n    // Transfer ETH held by this contrat to the sender/owner.\\n    function withdrawETH(uint256 amount) external onlyOwner {\\n        payable(msg.sender).transfer(amount);\\n    }\\n\\n    // Payable fallback to allow this contract to receive protocol fee refunds.\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n\\n    // Transfer tokens held by this contrat to the sender/owner.\\n    function withdrawToken(IERC20 token, uint256 amount) internal {\\n        token.transfer(msg.sender, amount);\\n    }\\n\\n    //Sets destination address to msg.sender\\n    function setDestination() internal view returns (address) {\\n        // destination = msg.sender;\\n        return msg.sender;\\n    }\\n\\n    // Transfer amount of ETH held by this contrat to the sender.\\n    function transferEth(uint256 amount, address msgSender) internal {\\n        payable(msgSender).transfer(amount);\\n    }\\n\\n    // Swaps ERC20->ERC20 tokens held by this contract using a 0x-API quote.\\n    function fillQuote(\\n        // The `buyTokenAddress` field from the API response.\\n        IERC20 buyToken,\\n        IERC20 sellToken,\\n        // The `allowanceTarget` field from the API response.\\n        address spender,\\n        // The `to` field from the API response.\\n        address swapTarget,\\n        // The `data` field from the API response.\\n        bytes calldata swapCallData\\n    ) internal returns (uint256) {\\n        if(spender == address(0)) revert InvalidAddress();\\n        // Track our balance of the buyToken to determine how much we've bought.\\n        uint256 boughtAmount = buyToken.balanceOf(address(this));\\n        sellToken.approve(spender, type(uint128).max);\\n        (bool success, ) = swapTarget.call{value: 0}(swapCallData);\\n        emit ZeroXCallSuccess(success, boughtAmount);\\n        if(!success) revert FillQuote_Swap_Failed({buyToken:buyToken,sellToken:sellToken});\\n        boughtAmount = buyToken.balanceOf(address(this)) - boughtAmount;\\n        emit buyTokenBought(boughtAmount);\\n        return boughtAmount;\\n    }\\n\\n    /**\\n     * @param sellToken addresses of sell tokens\\n     * @param buyToken addresses of sell tokens\\n     * @param amount numbers of token to transfer  in unit256\\n     * \\n     */\\n    function multiSwap(\\n        IERC20[] calldata sellToken,\\n        IERC20[] calldata buyToken,\\n        address[] calldata spender,\\n        address payable[] calldata swapTarget,\\n        bytes[] calldata swapCallData,\\n        uint256[] memory amount\\n    ) external payable {\\n        if(!(\\n            sellToken.length <= maxTransactions &&\\n                sellToken.length == buyToken.length &&\\n                spender.length == buyToken.length &&\\n                swapTarget.length == spender.length))\\n            revert Invalid_Multiswap_Data();\\n\\n        wethInfo memory WethInfo= wethInfo(0,WETH);\\n\\n        if (msg.value > 0) {\\n            WethInfo.wETH.deposit{value: msg.value}();\\n            WethInfo.eth_balance = msg.value-fee;\\n            WethInfo.wETH.transfer(owner(), fee);\\n            emit EtherBalanceChange(WethInfo.eth_balance);\\n        }\\n\\n        for (uint256 i = 0; i < spender.length; i++) {\\n            // ETHER & WETH Withdrawl request.\\n            if (spender[i] == address(0)) {\\n                if (WethInfo.eth_balance < amount[i]) {\\n                    emit BadRequest(WethInfo.eth_balance, amount[i]);\\n                    break;\\n                }\\n                if (amount[i] > 0) {\\n                    WethInfo.eth_balance -= amount[i];\\n                    WethInfo.wETH.withdraw(amount[i]);\\n                    transferEth(amount[i], setDestination());\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                }\\n                continue;\\n            }\\n            // Condition For using Deposited Ether before using WETH From user balance.\\n            if (sellToken[i] == WethInfo.wETH) {\\n                if (sellToken[i] == buyToken[i]) {\\n                    depositToken(sellToken[i], amount[i]);\\n                    WethInfo.eth_balance += amount[i];\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                    continue;\\n                }\\n                WethInfo.eth_balance -= amount[i];\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                depositToken(sellToken[i], amount[i]);\\n            }\\n\\n            // Variable to store amount of tokens purchased.\\n            uint256 boughtAmount = fillQuote(\\n                buyToken[i],\\n                sellToken[i],\\n                spender[i],\\n                swapTarget[i],\\n                swapCallData[i]\\n            );\\n\\n            if (buyToken[i] == WethInfo.wETH) {\\n                WethInfo.eth_balance += boughtAmount;\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                withdrawToken(buyToken[i], boughtAmount);\\n                emit WithdrawTokens(buyToken[i], boughtAmount);\\n            }\\n        }\\n        if (WethInfo.eth_balance > 0) {\\n            withdrawToken(WethInfo.wETH, WethInfo.eth_balance);\\n            emit EtherBalanceChange(0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa910e1385971bb5a92b2dffa4e67e0094a9c3596f111208c5431d433686ee3f2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}